{
	"id": 0,
	"name": "d2b",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 933,
			"name": "\"ChartAxis\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartAxis.ts",
			"children": [
				{
					"id": 934,
					"name": "Annotation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart graph annotation interface."
					},
					"indexSignature": [
						{
							"id": 942,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the annotation for reference."
							},
							"parameters": [
								{
									"id": 943,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 935,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Annotation x position."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 14,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 937,
							"name": "x2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation x2 position."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 940,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation x type.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 41,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							}
						},
						{
							"id": 936,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Annotation y position."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 19,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 938,
							"name": "y2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation y2 position."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 941,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation y type.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 47,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							}
						},
						{
							"id": 939,
							"name": "z",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation z position.",
								"tags": [
									{
										"tag": "default",
										"text": "'front'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 35,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "front"
									},
									{
										"type": "stringLiteral",
										"value": "back"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								935,
								937,
								940,
								936,
								938,
								941,
								939
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 10,
							"character": 20
						}
					]
				},
				{
					"id": 944,
					"name": "AxisConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart, axis config interface."
					},
					"children": [
						{
							"id": 945,
							"name": "axis",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify a configured [d3-axis](https://github.com/d3/d3-axis). It's usually better to use the\nfollowing axis configuration properties instead of setting your own."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 68,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Axis",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 950,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets a label for this axis."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 97,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 951,
							"name": "labelOrient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis label orientation."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 102,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "outer start"
									},
									{
										"type": "stringLiteral",
										"value": "outer middle"
									},
									{
										"type": "stringLiteral",
										"value": "outer end"
									},
									{
										"type": "stringLiteral",
										"value": "inner start"
									},
									{
										"type": "stringLiteral",
										"value": "inner middle"
									},
									{
										"type": "stringLiteral",
										"value": "inner end"
									}
								]
							}
						},
						{
							"id": 952,
							"name": "linearPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pad both sides of the continuous scale by a percent of the domain range. For example [-0.1, 0.2] will\npad the minimum scale domain by 10% and the upper end by 20%."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 108,
									"character": 15
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 946,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis orientation inside or outside the plane.",
								"tags": [
									{
										"tag": "default",
										"text": "'outer'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 74,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "inner"
									},
									{
										"type": "stringLiteral",
										"value": "outer"
									}
								]
							}
						},
						{
							"id": 963,
							"name": "scale",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis' scale config interface."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 134,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 964,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 973,
													"name": "base",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See d3-scale [log base](https://github.com/d3/d3-scale#log_base)",
														"tags": [
															{
																"tag": "default",
																"text": "10\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 167,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 970,
													"name": "clamp",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See d3-scale [continuous clamp](https://github.com/d3/d3-scale#continuous_clamp)",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 149,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 974,
													"name": "constant",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See d3-scale [symlog constant](https://github.com/d3/d3-scale#symlog_constant)",
														"tags": [
															{
																"tag": "default",
																"text": "1\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 173,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 966,
													"name": "domain",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See [d3-scale](https://github.com/d3/d3-scale) for different scale type domains."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 143,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "DomainValues",
																"id": 1098
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 967,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 968,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 969,
																					"name": "values",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "DomainValues",
																						"id": 1098
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "DomainValues",
																				"id": 1098
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 143,
																			"character": 27
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 972,
													"name": "exponent",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See d3-scale [power exponent](https://github.com/d3/d3-scale#pow_exponent)",
														"tags": [
															{
																"tag": "default",
																"text": "1\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 161,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 975,
													"name": "forceBounds",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Force domain bounds for [continuous scales](https://github.com/d3/d3-scale#_continuous).\nThis is useful if you want the domain min OR max to be automatic but the other to be fixed."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 179,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 976,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 978,
																			"name": "max",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Force maximum domain bound for [continuous scales](https://github.com/d3/d3-scale#_continuous)"
																			},
																			"sources": [
																				{
																					"fileName": "ChartAxis.ts",
																					"line": 188,
																					"character": 9
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 977,
																			"name": "min",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Force minimum domain bound for [continuous scales](https://github.com/d3/d3-scale#_continuous)"
																			},
																			"sources": [
																				{
																					"fileName": "ChartAxis.ts",
																					"line": 183,
																					"character": 9
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				978,
																				977
																			]
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 971,
													"name": "nice",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "See d3-scale [continuous nice](https://github.com/d3/d3-scale#continuous_nice)",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 155,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 965,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "D3 scale instance or descriptor string."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 138,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "stringLiteral",
																"value": "band"
															},
															{
																"type": "stringLiteral",
																"value": "point"
															},
															{
																"type": "stringLiteral",
																"value": "linear"
															},
															{
																"type": "stringLiteral",
																"value": "time"
															},
															{
																"type": "stringLiteral",
																"value": "pow"
															},
															{
																"type": "stringLiteral",
																"value": "log"
															},
															{
																"type": "reference",
																"name": "AxisScale",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														973,
														970,
														974,
														966,
														972,
														975,
														971,
														965
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 949,
							"name": "showGrid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the grid for this axis.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 92,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 955,
							"name": "tickFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the tick format. See d3-axis [tickFormat](https://github.com/d3/d3-axis#axis_tickFormat)"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 124,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 956,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 957,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 958,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 959,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 960,
																					"name": "valueOf",
																					"kind": 64,
																					"kindString": "Function",
																					"flags": {
																						"isExternal": true
																					},
																					"signatures": [
																						{
																							"id": 961,
																							"name": "valueOf",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"sources": [
																						{
																							"fileName": "ChartAxis.ts",
																							"line": 124,
																							"character": 37
																						}
																					]
																				}
																			],
																			"groups": [
																				{
																					"title": "Functions",
																					"kind": 64,
																					"children": [
																						960
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartAxis.ts",
																					"line": 124,
																					"character": 27
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 953,
							"name": "tickPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pad tick labels from the plan for this axis. See d3-axis [tickPadding](https://github.com/d3/d3-axis#axis_tickPadding)",
								"tags": [
									{
										"tag": "default",
										"text": "3\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 114,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 948,
							"name": "tickSize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "See d3-axis [tickSize](https://github.com/d3/d3-axis#axis_tickSize)",
								"tags": [
									{
										"tag": "default",
										"text": "6\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 86,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 962,
							"name": "tickValues",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the tick values instead of automatically generating them. See d3-axis [tickValues](https://github.com/d3/d3-axis#axis_tickValues)"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 129,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 954,
							"name": "ticks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Specify the tick count or axis time interval for the axis. See d3-axis [ticks](https://github.com/d3/d3-axis#axis_ticks)"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 119,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "AxisTimeInterval"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 947,
							"name": "wrapLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis tick wrap length.",
								"tags": [
									{
										"tag": "default",
										"text": "Infinity\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								945,
								950,
								951,
								952,
								946,
								963,
								949,
								955,
								953,
								948,
								962,
								954,
								947
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 63,
							"character": 20
						}
					]
				},
				{
					"id": 984,
					"name": "ChartAxisConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Chart axis config interface."
					},
					"children": [
						{
							"id": 985,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 230,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 934
									}
								]
							}
						},
						{
							"id": 1005,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 280,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 996,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 262,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 1001,
							"name": "graphColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart axis graph color or accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 274,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1002,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1003,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1004,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGroupConfig",
																"id": 979
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxis.ts",
													"line": 274,
													"character": 23
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 997,
							"name": "groupColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart axis group color or accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 268,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 998,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 999,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1000,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGraphData",
																"id": 898
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxis.ts",
													"line": 268,
													"character": 23
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 986,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis chart groups. Groups are used to group multiple graph's together on the legend."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 235,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGroupConfig",
										"id": 979
									}
								]
							}
						},
						{
							"id": 1009,
							"name": "legend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart legend configuration options."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 303,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1010,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1013,
													"name": "clickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on click.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 320,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1014,
													"name": "dblclickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on dblclick.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 326,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1011,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the legend.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 308,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1015,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). This can also be provided\nas an accessor function to the graph / group data.",
														"tags": [
															{
																"tag": "default",
																"text": "d3.symbolCircle\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 335,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "SymbolType"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1016,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1017,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1018,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "reference",
																								"name": "ChartAxisGraphData",
																								"id": 898
																							},
																							{
																								"type": "reference",
																								"name": "ChartAxisGroupConfig",
																								"id": 979
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"name": "SymbolType"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 335,
																			"character": 32
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1012,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'bottom'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 314,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1013,
														1014,
														1011,
														1015,
														1012
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1006,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 286,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 1008,
							"name": "planeMargin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's plane margin. This is useful if additional space is required for axis labels or ticks.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 298,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 1007,
							"name": "planePadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's plane padding. If set to null the padding will be computed automatically based on the axis label and tick sizes.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 292,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 1040,
							"name": "sets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis chart graph set configuration."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 402,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ChartAxisGeneralSetConfig",
												"id": 903
											},
											{
												"type": "reference",
												"name": "ChartAxisBoxPlotSetConfig",
												"id": 923
											},
											{
												"type": "reference",
												"name": "ChartAxisBubblePackSetConfig",
												"id": 913
											}
										]
									}
								]
							}
						},
						{
							"id": 992,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 246,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 993,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 995,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 255,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 994,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 250,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														995,
														994
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1019,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 341,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1020,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1031,
													"name": "row",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in each of the tooltip's rows.",
														"tags": [
															{
																"tag": "default",
																"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 376,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1032,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1033,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1034,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartAxisValueData",
																						"id": 591
																					}
																				},
																				{
																					"id": 1035,
																					"name": "graph",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartAxisGraphData",
																						"id": 898
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 376,
																			"character": 25
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1023,
													"name": "threshold",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The tooltip threshold for the cursor distant to the nearest axis chart value.",
														"tags": [
															{
																"tag": "default",
																"text": "50\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 359,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1024,
													"name": "title",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the tooltip's title.",
														"tags": [
															{
																"tag": "default",
																"text": "(values) => {\n  const first = values[0].value\n  return `${first.x, first.x1, first.median}`\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 368,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1025,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1026,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1027,
																					"name": "values",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Array",
																						"typeArguments": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 1028,
																									"name": "__type",
																									"kind": 65536,
																									"kindString": "Type literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 1030,
																											"name": "graph",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {
																												"isExternal": true
																											},
																											"sources": [
																												{
																													"fileName": "ChartAxis.ts",
																													"line": 368,
																													"character": 77
																												}
																											],
																											"type": {
																												"type": "reference",
																												"name": "ChartAxisGraphData",
																												"id": 898
																											}
																										},
																										{
																											"id": 1029,
																											"name": "value",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {
																												"isExternal": true
																											},
																											"sources": [
																												{
																													"fileName": "ChartAxis.ts",
																													"line": 368,
																													"character": 50
																												}
																											],
																											"type": {
																												"type": "reference",
																												"name": "ChartAxisValueData",
																												"id": 591
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Variables",
																											"kind": 32,
																											"children": [
																												1030,
																												1029
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "ChartAxis.ts",
																											"line": 368,
																											"character": 44
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 368,
																			"character": 27
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1021,
													"name": "trackX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will show values near the horizontal position of the cursor.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 346,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1022,
													"name": "trackY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will show values near the vertical position of the cursor. (useful for horizontally oriented graphs or\ncharts that have a lot of y values stacked on the same discrete x values)",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 353,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1031,
														1023,
														1024,
														1021,
														1022
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 987,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 241,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 988,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 989,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 990,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 991,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisData",
																"id": 1041
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1036,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "X-axis (bottom) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 382,
									"character": 3
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							}
						},
						{
							"id": 1038,
							"name": "x2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "X2-axis (top) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 392,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							}
						},
						{
							"id": 1037,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y-axis (left) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 387,
									"character": 3
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							}
						},
						{
							"id": 1039,
							"name": "y2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y2-axis (right) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 397,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								985,
								1005,
								996,
								1001,
								997,
								986,
								1009,
								1006,
								1008,
								1007,
								1040,
								992,
								1019,
								987,
								1036,
								1038,
								1037,
								1039
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 225,
							"character": 32
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisData",
							"id": 1041
						}
					]
				},
				{
					"id": 1041,
					"name": "ChartAxisData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Chart axis data interface."
					},
					"children": [
						{
							"id": 1043,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 230,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 934
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.annotations",
								"id": 985
							}
						},
						{
							"id": 1063,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 280,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.chartPadding",
								"id": 1005
							}
						},
						{
							"id": 1054,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 262,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.duration",
								"id": 996
							}
						},
						{
							"id": 1059,
							"name": "graphColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart axis graph color or accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 274,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1060,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1061,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1062,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGroupConfig",
																"id": 979
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxis.ts",
													"line": 274,
													"character": 23
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.graphColor",
								"id": 1001
							}
						},
						{
							"id": 1055,
							"name": "groupColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart axis group color or accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 268,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1056,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1057,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1058,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGraphData",
																"id": 898
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxis.ts",
													"line": 268,
													"character": 23
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.groupColor",
								"id": 997
							}
						},
						{
							"id": 1044,
							"name": "groups",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Axis chart groups. Groups are used to group multiple graph's together on the legend."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 235,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGroupConfig",
										"id": 979
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.groups",
								"id": 986
							}
						},
						{
							"id": 1067,
							"name": "legend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart legend configuration options."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 303,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1068,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1071,
													"name": "clickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on click.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 320,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1072,
													"name": "dblclickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on dblclick.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 326,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1069,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the legend.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 308,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1073,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). This can also be provided\nas an accessor function to the graph / group data.",
														"tags": [
															{
																"tag": "default",
																"text": "d3.symbolCircle\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 335,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "SymbolType"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1074,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1075,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1076,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "reference",
																								"name": "ChartAxisGraphData",
																								"id": 898
																							},
																							{
																								"type": "reference",
																								"name": "ChartAxisGroupConfig",
																								"id": 979
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"name": "SymbolType"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 335,
																			"character": 32
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1070,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'bottom'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 314,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1071,
														1072,
														1069,
														1073,
														1070
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.legend",
								"id": 1009
							}
						},
						{
							"id": 1064,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 286,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.padding",
								"id": 1006
							}
						},
						{
							"id": 1066,
							"name": "planeMargin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's plane margin. This is useful if additional space is required for axis labels or ticks.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 298,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.planeMargin",
								"id": 1008
							}
						},
						{
							"id": 1065,
							"name": "planePadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's plane padding. If set to null the padding will be computed automatically based on the axis label and tick sizes.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 292,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.planePadding",
								"id": 1007
							}
						},
						{
							"id": 1042,
							"name": "sets",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Axis chart graph set data."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 412,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ChartAxisGeneralSetData",
												"id": 908
											},
											{
												"type": "reference",
												"name": "ChartAxisBoxPlotSetData",
												"id": 928
											},
											{
												"type": "reference",
												"name": "ChartAxisBubblePackSetData",
												"id": 918
											}
										]
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisConfig.sets",
								"id": 1040
							}
						},
						{
							"id": 1050,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 246,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1051,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1053,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 255,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1052,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 250,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1053,
														1052
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.size",
								"id": 992
							}
						},
						{
							"id": 1077,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 341,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1078,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1089,
													"name": "row",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in each of the tooltip's rows.",
														"tags": [
															{
																"tag": "default",
																"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 376,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1090,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1091,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1092,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartAxisValueData",
																						"id": 591
																					}
																				},
																				{
																					"id": 1093,
																					"name": "graph",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartAxisGraphData",
																						"id": 898
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 376,
																			"character": 25
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1081,
													"name": "threshold",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The tooltip threshold for the cursor distant to the nearest axis chart value.",
														"tags": [
															{
																"tag": "default",
																"text": "50\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 359,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 1082,
													"name": "title",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the tooltip's title.",
														"tags": [
															{
																"tag": "default",
																"text": "(values) => {\n  const first = values[0].value\n  return `${first.x, first.x1, first.median}`\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 368,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1083,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 1084,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 1085,
																					"name": "values",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "Array",
																						"typeArguments": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 1086,
																									"name": "__type",
																									"kind": 65536,
																									"kindString": "Type literal",
																									"flags": {},
																									"children": [
																										{
																											"id": 1088,
																											"name": "graph",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {
																												"isExternal": true
																											},
																											"sources": [
																												{
																													"fileName": "ChartAxis.ts",
																													"line": 368,
																													"character": 77
																												}
																											],
																											"type": {
																												"type": "reference",
																												"name": "ChartAxisGraphData",
																												"id": 898
																											}
																										},
																										{
																											"id": 1087,
																											"name": "value",
																											"kind": 32,
																											"kindString": "Variable",
																											"flags": {
																												"isExternal": true
																											},
																											"sources": [
																												{
																													"fileName": "ChartAxis.ts",
																													"line": 368,
																													"character": 50
																												}
																											],
																											"type": {
																												"type": "reference",
																												"name": "ChartAxisValueData",
																												"id": 591
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Variables",
																											"kind": 32,
																											"children": [
																												1088,
																												1087
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "ChartAxis.ts",
																											"line": 368,
																											"character": 44
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxis.ts",
																			"line": 368,
																			"character": 27
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 1079,
													"name": "trackX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will show values near the horizontal position of the cursor.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 346,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 1080,
													"name": "trackY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will show values near the vertical position of the cursor. (useful for horizontally oriented graphs or\ncharts that have a lot of y values stacked on the same discrete x values)",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartAxis.ts",
															"line": 353,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1089,
														1081,
														1082,
														1079,
														1080
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.tooltip",
								"id": 1019
							}
						},
						{
							"id": 1045,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 241,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1046,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1047,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1048,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 1049,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisData",
																"id": 1041
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.updated",
								"id": 987
							}
						},
						{
							"id": 1094,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "X-axis (bottom) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 382,
									"character": 3
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.x",
								"id": 1036
							}
						},
						{
							"id": 1096,
							"name": "x2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "X2-axis (top) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 392,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.x2",
								"id": 1038
							}
						},
						{
							"id": 1095,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y-axis (left) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 387,
									"character": 3
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.y",
								"id": 1037
							}
						},
						{
							"id": 1097,
							"name": "y2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y2-axis (right) config"
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 397,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "AxisConfig",
								"id": 944
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisConfig.y2",
								"id": 1039
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1043,
								1063,
								1054,
								1059,
								1055,
								1044,
								1067,
								1064,
								1066,
								1065,
								1042,
								1050,
								1077,
								1045,
								1094,
								1096,
								1095,
								1097
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 408,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisConfig",
							"id": 984
						}
					]
				},
				{
					"id": 979,
					"name": "ChartAxisGroupConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart group config interface."
					},
					"children": [
						{
							"id": 981,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The group color property. By default this will defer to the graph color."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 206,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 983,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this group. This value will be modified internally when interacting with the chart legend."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 219,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 980,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "The group label, should match the corresponding graph's group property."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 201,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 982,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxis.ts",
									"line": 214,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								981,
								983,
								980,
								982
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 197,
							"character": 37
						}
					]
				},
				{
					"id": 1098,
					"name": "DomainValues",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Possible domain values type."
					},
					"sources": [
						{
							"fileName": "ChartAxis.ts",
							"line": 58,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "Array",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						934,
						944,
						984,
						1041,
						979
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1098
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartAxis.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 592,
			"name": "\"ChartAxisGenerators\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartAxisGenerators.ts",
			"children": [
				{
					"id": 745,
					"name": "ChartAxisBoxPlotGeneratorConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart box plot generator config.",
						"tags": [
							{
								"tag": "generators",
								"text": "boxPlot\n"
							}
						]
					},
					"children": [
						{
							"id": 746,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for boxes.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							}
						},
						{
							"id": 747,
							"name": "valueFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value format for various box plot metrics (e.g. maximum, minimum, median, ..)",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "d3.format(',')\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 166,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 748,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 749,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 750,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 751,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 752,
																					"name": "valueOf",
																					"kind": 64,
																					"kindString": "Function",
																					"flags": {
																						"isExternal": true
																					},
																					"signatures": [
																						{
																							"id": 753,
																							"name": "valueOf",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"sources": [
																						{
																							"fileName": "ChartAxisGenerators.ts",
																							"line": 166,
																							"character": 38
																						}
																					]
																				}
																			],
																			"groups": [
																				{
																					"title": "Functions",
																					"kind": 64,
																					"children": [
																						752
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartAxisGenerators.ts",
																					"line": 166,
																					"character": 28
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 754,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box pixel width.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "20\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								746,
								747,
								754
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 153,
							"character": 48
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotGeneratorData",
							"id": 755
						}
					]
				},
				{
					"id": 683,
					"name": "ChartAxisBubblePackGeneratorConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubble pack generator config.",
						"tags": [
							{
								"tag": "generators",
								"text": "bubblePack\n"
							}
						]
					},
					"children": [
						{
							"id": 684,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pixel size multiplier for bubbles.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "100\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 116,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 697,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the bubble pack graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 130,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							}
						},
						{
							"id": 685,
							"name": "tendancy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How the parent bubble size, x, and y values should be computed. (e.g. as a mean / median / midpoint.. of their leaf nodes)",
								"tags": [
									{
										"tag": "generators",
										"text": "tendancy"
									},
									{
										"tag": "default",
										"text": "d2b.mean\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 123,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 686,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 687,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 688,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 689,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 690,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 691,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 692,
																					"name": "v",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxisGenerators.ts",
																			"line": 123,
																			"character": 40
																		}
																	]
																}
															}
														},
														{
															"id": 693,
															"name": "weight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 694,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"signatures": [
																				{
																					"id": 695,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 696,
																							"name": "v",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								684,
								697,
								685
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 110,
							"character": 51
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBubblePackGeneratorData",
							"id": 698
						}
					]
				},
				{
					"id": 593,
					"name": "ChartAxisGeneralGeneratorConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general generator config.",
						"tags": [
							{
								"tag": "generators",
								"text": "bar, area, line, scatter\n"
							}
						]
					},
					"children": [
						{
							"id": 608,
							"name": "align",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Align line or scatter graphs according to their y1 or y0 stack orientation. This is useful if you want to have 2 line graphs\noutlining the top and bottom of an area chart.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, line"
									},
									{
										"tag": "default",
										"text": "'y1'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 65,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y1"
									},
									{
										"type": "stringLiteral",
										"value": "y0"
									}
								]
							}
						},
						{
							"id": 613,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bars to the center of their respective group position.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 79,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 607,
							"name": "curve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Curve factory for area and line graphs. See d3-shape's [curves](https://github.com/d3/d3-shape#curves) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line"
									},
									{
										"tag": "default",
										"text": "d3.curveLinear\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 57,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							}
						},
						{
							"id": 596,
							"name": "groupPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"within\" bar groups (or between individual bars within a group).",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 606,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for bars.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							}
						},
						{
							"id": 595,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"between\" bar groups.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0.5\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 609,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel area for scatter graphs. This can also be given as a value accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "25\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 610,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 611,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 612,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGenerators.ts",
													"line": 72,
													"character": 17
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 594,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable graph stacking.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 597,
							"name": "stackOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack offset for area line and scatter graphs. See d3-shape's [stack offsets](https://github.com/d3/d3-shape#stack-offsets) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOffsetNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 598,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 599,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 600,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 601,
															"name": "order",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 602,
							"name": "stackOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack order for area line and scatter graphs. See d3-shape's [stack orders](https://github.com/d3/d3-shape#stack-orders) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOrderNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 603,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 604,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 605,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Array",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 614,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the scatter graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								608,
								613,
								607,
								596,
								606,
								595,
								609,
								594,
								597,
								602,
								614
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 10,
							"character": 48
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGeneralGeneratorData",
							"id": 615
						}
					]
				},
				{
					"id": 755,
					"name": "ChartAxisSharedBoxPlotGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 756,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for boxes.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.orient",
								"id": 746
							}
						},
						{
							"id": 757,
							"name": "valueFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value format for various box plot metrics (e.g. maximum, minimum, median, ..)",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "d3.format(',')\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 166,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 758,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 759,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 760,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 761,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 762,
																					"name": "valueOf",
																					"kind": 64,
																					"kindString": "Function",
																					"flags": {
																						"isExternal": true
																					},
																					"signatures": [
																						{
																							"id": 763,
																							"name": "valueOf",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"sources": [
																						{
																							"fileName": "ChartAxisGenerators.ts",
																							"line": 166,
																							"character": 38
																						}
																					]
																				}
																			],
																			"groups": [
																				{
																					"title": "Functions",
																					"kind": 64,
																					"children": [
																						762
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartAxisGenerators.ts",
																					"line": 166,
																					"character": 28
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.valueFormat",
								"id": 747
							}
						},
						{
							"id": 764,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box pixel width.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "20\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.width",
								"id": 754
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								756,
								757,
								764
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 176,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotGeneratorConfig",
							"id": 745
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisTypeBoxPlotGeneratorData",
							"id": 765
						},
						{
							"type": "reference",
							"name": "ChartAxisTypesBoxPlotGeneratorData",
							"id": 776
						}
					]
				},
				{
					"id": 698,
					"name": "ChartAxisSharedBubblePackGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 699,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pixel size multiplier for bubbles.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "100\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 116,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.size",
								"id": 684
							}
						},
						{
							"id": 712,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the bubble pack graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 130,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.symbol",
								"id": 697
							}
						},
						{
							"id": 700,
							"name": "tendancy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How the parent bubble size, x, and y values should be computed. (e.g. as a mean / median / midpoint.. of their leaf nodes)",
								"tags": [
									{
										"tag": "generators",
										"text": "tendancy"
									},
									{
										"tag": "default",
										"text": "d2b.mean\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 123,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 701,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 702,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 703,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 704,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 705,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 706,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 707,
																					"name": "v",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxisGenerators.ts",
																			"line": 123,
																			"character": 40
																		}
																	]
																}
															}
														},
														{
															"id": 708,
															"name": "weight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 709,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"signatures": [
																				{
																					"id": 710,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 711,
																							"name": "v",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.tendancy",
								"id": 685
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								699,
								712,
								700
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 133,
							"character": 48
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisBubblePackGeneratorConfig",
							"id": 683
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisTypeBubblePackGeneratorData",
							"id": 713
						},
						{
							"type": "reference",
							"name": "ChartAxisTypesBubblePackGeneratorData",
							"id": 729
						}
					]
				},
				{
					"id": 615,
					"name": "ChartAxisSharedGeneralGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 630,
							"name": "align",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Align line or scatter graphs according to their y1 or y0 stack orientation. This is useful if you want to have 2 line graphs\noutlining the top and bottom of an area chart.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, line"
									},
									{
										"tag": "default",
										"text": "'y1'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 65,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y1"
									},
									{
										"type": "stringLiteral",
										"value": "y0"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.align",
								"id": 608
							}
						},
						{
							"id": 635,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bars to the center of their respective group position.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 79,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.centered",
								"id": 613
							}
						},
						{
							"id": 629,
							"name": "curve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Curve factory for area and line graphs. See d3-shape's [curves](https://github.com/d3/d3-shape#curves) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line"
									},
									{
										"tag": "default",
										"text": "d3.curveLinear\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 57,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.curve",
								"id": 607
							}
						},
						{
							"id": 618,
							"name": "groupPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"within\" bar groups (or between individual bars within a group).",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.groupPadding",
								"id": 596
							}
						},
						{
							"id": 628,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for bars.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.orient",
								"id": 606
							}
						},
						{
							"id": 617,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"between\" bar groups.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0.5\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.padding",
								"id": 595
							}
						},
						{
							"id": 631,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel area for scatter graphs. This can also be given as a value accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "25\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 632,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 633,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 634,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGenerators.ts",
													"line": 72,
													"character": 17
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.size",
								"id": 609
							}
						},
						{
							"id": 616,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable graph stacking.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stack",
								"id": 594
							}
						},
						{
							"id": 619,
							"name": "stackOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack offset for area line and scatter graphs. See d3-shape's [stack offsets](https://github.com/d3/d3-shape#stack-offsets) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOffsetNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 620,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 621,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 622,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 623,
															"name": "order",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOffset",
								"id": 597
							}
						},
						{
							"id": 624,
							"name": "stackOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack order for area line and scatter graphs. See d3-shape's [stack orders](https://github.com/d3/d3-shape#stack-orders) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOrderNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 625,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 626,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 627,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Array",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOrder",
								"id": 602
							}
						},
						{
							"id": 636,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the scatter graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.symbol",
								"id": 614
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								630,
								635,
								629,
								618,
								628,
								617,
								631,
								616,
								619,
								624,
								636
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 89,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralGeneratorConfig",
							"id": 593
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisTypeGeneralGeneratorData",
							"id": 637
						},
						{
							"type": "reference",
							"name": "ChartAxisTypesGeneralGeneratorData",
							"id": 660
						}
					]
				},
				{
					"id": 765,
					"name": "ChartAxisTypeBoxPlotGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 767,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for boxes.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.orient",
								"id": 746
							}
						},
						{
							"id": 766,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 179,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "boxPlot"
							}
						},
						{
							"id": 768,
							"name": "valueFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value format for various box plot metrics (e.g. maximum, minimum, median, ..)",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "d3.format(',')\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 166,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 769,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 770,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 771,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 772,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 773,
																					"name": "valueOf",
																					"kind": 64,
																					"kindString": "Function",
																					"flags": {
																						"isExternal": true
																					},
																					"signatures": [
																						{
																							"id": 774,
																							"name": "valueOf",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"sources": [
																						{
																							"fileName": "ChartAxisGenerators.ts",
																							"line": 166,
																							"character": 38
																						}
																					]
																				}
																			],
																			"groups": [
																				{
																					"title": "Functions",
																					"kind": 64,
																					"children": [
																						773
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartAxisGenerators.ts",
																					"line": 166,
																					"character": 28
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.valueFormat",
								"id": 747
							}
						},
						{
							"id": 775,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box pixel width.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "20\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.width",
								"id": 754
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								767,
								766,
								768,
								775
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 178,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotGeneratorData",
							"id": 755
						}
					]
				},
				{
					"id": 713,
					"name": "ChartAxisTypeBubblePackGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 715,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pixel size multiplier for bubbles.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "100\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 116,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.size",
								"id": 684
							}
						},
						{
							"id": 728,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the bubble pack graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 130,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.symbol",
								"id": 697
							}
						},
						{
							"id": 716,
							"name": "tendancy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How the parent bubble size, x, and y values should be computed. (e.g. as a mean / median / midpoint.. of their leaf nodes)",
								"tags": [
									{
										"tag": "generators",
										"text": "tendancy"
									},
									{
										"tag": "default",
										"text": "d2b.mean\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 123,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 717,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 718,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 719,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 720,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 721,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 722,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 723,
																					"name": "v",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxisGenerators.ts",
																			"line": 123,
																			"character": 40
																		}
																	]
																}
															}
														},
														{
															"id": 724,
															"name": "weight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 725,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"signatures": [
																				{
																					"id": 726,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 727,
																							"name": "v",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.tendancy",
								"id": 685
							}
						},
						{
							"id": 714,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 136,
									"character": 6
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "bubblePack"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								715,
								728,
								716,
								714
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 135,
							"character": 46
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBubblePackGeneratorData",
							"id": 698
						}
					]
				},
				{
					"id": 637,
					"name": "ChartAxisTypeGeneralGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 653,
							"name": "align",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Align line or scatter graphs according to their y1 or y0 stack orientation. This is useful if you want to have 2 line graphs\noutlining the top and bottom of an area chart.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, line"
									},
									{
										"tag": "default",
										"text": "'y1'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 65,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y1"
									},
									{
										"type": "stringLiteral",
										"value": "y0"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.align",
								"id": 608
							}
						},
						{
							"id": 658,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bars to the center of their respective group position.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 79,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.centered",
								"id": 613
							}
						},
						{
							"id": 652,
							"name": "curve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Curve factory for area and line graphs. See d3-shape's [curves](https://github.com/d3/d3-shape#curves) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line"
									},
									{
										"tag": "default",
										"text": "d3.curveLinear\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 57,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.curve",
								"id": 607
							}
						},
						{
							"id": 641,
							"name": "groupPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"within\" bar groups (or between individual bars within a group).",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.groupPadding",
								"id": 596
							}
						},
						{
							"id": 651,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for bars.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.orient",
								"id": 606
							}
						},
						{
							"id": 640,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"between\" bar groups.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0.5\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.padding",
								"id": 595
							}
						},
						{
							"id": 654,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel area for scatter graphs. This can also be given as a value accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "25\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 655,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 656,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 657,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGenerators.ts",
													"line": 72,
													"character": 17
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.size",
								"id": 609
							}
						},
						{
							"id": 639,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable graph stacking.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stack",
								"id": 594
							}
						},
						{
							"id": 642,
							"name": "stackOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack offset for area line and scatter graphs. See d3-shape's [stack offsets](https://github.com/d3/d3-shape#stack-offsets) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOffsetNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 643,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 644,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 645,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 646,
															"name": "order",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOffset",
								"id": 597
							}
						},
						{
							"id": 647,
							"name": "stackOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack order for area line and scatter graphs. See d3-shape's [stack orders](https://github.com/d3/d3-shape#stack-orders) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOrderNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 648,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 649,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 650,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Array",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOrder",
								"id": 602
							}
						},
						{
							"id": 659,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the scatter graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.symbol",
								"id": 614
							}
						},
						{
							"id": 638,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 92,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "GeneralType",
								"id": 787
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								653,
								658,
								652,
								641,
								651,
								640,
								654,
								639,
								642,
								647,
								659,
								638
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 91,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGeneralGeneratorData",
							"id": 615
						}
					]
				},
				{
					"id": 776,
					"name": "ChartAxisTypesBoxPlotGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 778,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for boxes.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.orient",
								"id": 746
							}
						},
						{
							"id": 777,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 183,
									"character": 7
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "stringLiteral",
										"value": "boxPlot"
									}
								]
							}
						},
						{
							"id": 779,
							"name": "valueFormat",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value format for various box plot metrics (e.g. maximum, minimum, median, ..)",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "d3.format(',')\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 166,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 780,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 781,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 782,
															"name": "n",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 783,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 784,
																					"name": "valueOf",
																					"kind": 64,
																					"kindString": "Function",
																					"flags": {
																						"isExternal": true
																					},
																					"signatures": [
																						{
																							"id": 785,
																							"name": "valueOf",
																							"kind": 4096,
																							"kindString": "Call signature",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"sources": [
																						{
																							"fileName": "ChartAxisGenerators.ts",
																							"line": 166,
																							"character": 38
																						}
																					]
																				}
																			],
																			"groups": [
																				{
																					"title": "Functions",
																					"kind": 64,
																					"children": [
																						784
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "ChartAxisGenerators.ts",
																					"line": 166,
																					"character": 28
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.valueFormat",
								"id": 747
							}
						},
						{
							"id": 786,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box pixel width.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot"
									},
									{
										"tag": "default",
										"text": "20\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 173,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGeneratorConfig.width",
								"id": 754
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								778,
								777,
								779,
								786
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 182,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotGeneratorData",
							"id": 755
						}
					]
				},
				{
					"id": 729,
					"name": "ChartAxisTypesBubblePackGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 731,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pixel size multiplier for bubbles.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "100\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 116,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.size",
								"id": 684
							}
						},
						{
							"id": 744,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the bubble pack graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 130,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.symbol",
								"id": 697
							}
						},
						{
							"id": 732,
							"name": "tendancy",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "How the parent bubble size, x, and y values should be computed. (e.g. as a mean / median / midpoint.. of their leaf nodes)",
								"tags": [
									{
										"tag": "generators",
										"text": "tendancy"
									},
									{
										"tag": "default",
										"text": "d2b.mean\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 123,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 733,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 734,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 735,
															"name": "values",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 736,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 737,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 738,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 739,
																					"name": "v",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartAxisGenerators.ts",
																			"line": 123,
																			"character": 40
																		}
																	]
																}
															}
														},
														{
															"id": 740,
															"name": "weight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 741,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"signatures": [
																				{
																					"id": 742,
																					"name": "__call",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 743,
																							"name": "v",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGeneratorConfig.tendancy",
								"id": 685
							}
						},
						{
							"id": 730,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 140,
									"character": 7
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "stringLiteral",
										"value": "bubblePack"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								731,
								744,
								732,
								730
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 139,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBubblePackGeneratorData",
							"id": 698
						}
					]
				},
				{
					"id": 660,
					"name": "ChartAxisTypesGeneralGeneratorData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 676,
							"name": "align",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Align line or scatter graphs according to their y1 or y0 stack orientation. This is useful if you want to have 2 line graphs\noutlining the top and bottom of an area chart.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, line"
									},
									{
										"tag": "default",
										"text": "'y1'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 65,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y1"
									},
									{
										"type": "stringLiteral",
										"value": "y0"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.align",
								"id": 608
							}
						},
						{
							"id": 681,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bars to the center of their respective group position.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 79,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.centered",
								"id": 613
							}
						},
						{
							"id": 675,
							"name": "curve",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Curve factory for area and line graphs. See d3-shape's [curves](https://github.com/d3/d3-shape#curves) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line"
									},
									{
										"tag": "default",
										"text": "d3.curveLinear\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 57,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveFactory"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.curve",
								"id": 607
							}
						},
						{
							"id": 664,
							"name": "groupPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"within\" bar groups (or between individual bars within a group).",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 29,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.groupPadding",
								"id": 596
							}
						},
						{
							"id": 674,
							"name": "orient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Element orientation for bars.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "'vertical'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 50,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "vertical"
									},
									{
										"type": "stringLiteral",
										"value": "horizontal"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.orient",
								"id": 606
							}
						},
						{
							"id": 663,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The padding \"between\" bar groups.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar"
									},
									{
										"tag": "default",
										"text": "0.5\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 22,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.padding",
								"id": 595
							}
						},
						{
							"id": 677,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel area for scatter graphs. This can also be given as a value accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "25\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 678,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 679,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 680,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGenerators.ts",
													"line": 72,
													"character": 17
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.size",
								"id": 609
							}
						},
						{
							"id": 662,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable graph stacking.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stack",
								"id": 594
							}
						},
						{
							"id": 665,
							"name": "stackOffset",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack offset for area line and scatter graphs. See d3-shape's [stack offsets](https://github.com/d3/d3-shape#stack-offsets) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOffsetNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 666,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 667,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 668,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														},
														{
															"id": 669,
															"name": "order",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Array",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOffset",
								"id": 597
							}
						},
						{
							"id": 670,
							"name": "stackOrder",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Stack order for area line and scatter graphs. See d3-shape's [stack orders](https://github.com/d3/d3-shape#stack-orders) for more information.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, line, scatter"
									},
									{
										"tag": "default",
										"text": "d3.stackOrderNone\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 43,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 671,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 672,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 673,
															"name": "series",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Series",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Array",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.stackOrder",
								"id": 602
							}
						},
						{
							"id": 682,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sets the symbol type for the scatter graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter"
									},
									{
										"tag": "default",
										"text": "d3.symbolCircle\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 86,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGeneratorConfig.symbol",
								"id": 614
							}
						},
						{
							"id": 661,
							"name": "types",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "ChartAxisGenerators.ts",
									"line": 96,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GeneralType",
										"id": 787
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								676,
								681,
								675,
								664,
								674,
								663,
								677,
								662,
								665,
								670,
								682,
								661
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 95,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGeneralGeneratorData",
							"id": 615
						}
					]
				},
				{
					"id": 790,
					"name": "ChartAxisBoxPlotGeneratorData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart box plot generator data.",
						"tags": [
							{
								"tag": "generators",
								"text": "boxPlot\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 190,
							"character": 41
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisTypeBoxPlotGeneratorData",
								"id": 765
							},
							{
								"type": "reference",
								"name": "ChartAxisTypesBoxPlotGeneratorData",
								"id": 776
							}
						]
					}
				},
				{
					"id": 789,
					"name": "ChartAxisBubblePackGeneratorData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubble pack generator data.",
						"tags": [
							{
								"tag": "generators",
								"text": "bubblePack\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 147,
							"character": 44
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisTypeBubblePackGeneratorData",
								"id": 713
							},
							{
								"type": "reference",
								"name": "ChartAxisTypesBubblePackGeneratorData",
								"id": 729
							}
						]
					}
				},
				{
					"id": 788,
					"name": "ChartAxisGeneralGeneratorData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general generator data.",
						"tags": [
							{
								"tag": "generators",
								"text": "bar, area, line, scatter\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 104,
							"character": 41
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisTypeGeneralGeneratorData",
								"id": 637
							},
							{
								"type": "reference",
								"name": "ChartAxisTypesGeneralGeneratorData",
								"id": 660
							}
						]
					}
				},
				{
					"id": 787,
					"name": "GeneralType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "ChartAxisGenerators.ts",
							"line": 4,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "bar"
							},
							{
								"type": "stringLiteral",
								"value": "area"
							},
							{
								"type": "stringLiteral",
								"value": "line"
							},
							{
								"type": "stringLiteral",
								"value": "scatter"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						745,
						683,
						593,
						755,
						698,
						615,
						765,
						713,
						637,
						776,
						729,
						660
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						790,
						789,
						788,
						787
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartAxisGenerators.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 791,
			"name": "\"ChartAxisGraphs\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartAxisGraphs.ts",
			"children": [
				{
					"id": 792,
					"name": "Annotation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart graph annotation interface."
					},
					"indexSignature": [
						{
							"id": 798,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the annotation for reference."
							},
							"parameters": [
								{
									"id": 799,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 793,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Annotation x position.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 12,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 795,
							"name": "x2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation x2 position.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 794,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Annotation y position.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 18,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 796,
							"name": "y2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation y2 position.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 797,
							"name": "z",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation z position.",
								"tags": [
									{
										"tag": "generators",
										"text": "all"
									},
									{
										"tag": "default",
										"text": "'front'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 37,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "front"
									},
									{
										"type": "stringLiteral",
										"value": "back"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								793,
								795,
								794,
								796,
								797
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 7,
							"character": 20
						}
					]
				},
				{
					"id": 844,
					"name": "ChartAxisBoxPlotGraphConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot graph config interface."
					},
					"children": [
						{
							"id": 856,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 852,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 854,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 851,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 855,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 853,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 846,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 156,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 847,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 848,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 849,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBoxPlotValueData",
																"id": 588
															}
														},
														{
															"id": 850,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBoxPlotGraphData",
																"id": 857
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 156,
													"character": 27
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 845,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "boxPlot values config.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 148,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotValueConfig",
										"id": 509
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								856,
								852,
								854,
								851,
								855,
								853,
								846,
								845
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 143,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphConfig",
							"id": 800
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotGraphData",
							"id": 857
						}
					]
				},
				{
					"id": 857,
					"name": "ChartAxisBoxPlotGraphData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot graph data interface."
					},
					"children": [
						{
							"id": 869,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 865,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 867,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 864,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 870,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph label.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 98,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphData.label",
								"id": 808
							}
						},
						{
							"id": 868,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 866,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 859,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 156,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 860,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 861,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 862,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBoxPlotValueData",
																"id": 588
															}
														},
														{
															"id": 863,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBoxPlotGraphData",
																"id": 857
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 156,
													"character": 27
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGraphConfig.tooltip",
								"id": 846
							}
						},
						{
							"id": 858,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph values data.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 167,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotValueData",
										"id": 588
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisBoxPlotGraphConfig.values",
								"id": 845
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								869,
								865,
								867,
								864,
								870,
								868,
								866,
								859,
								858
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 162,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotGraphConfig",
							"id": 844
						},
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphData",
							"id": 807
						}
					]
				},
				{
					"id": 871,
					"name": "ChartAxisBubblePackGraphConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack graph config interface."
					},
					"children": [
						{
							"id": 883,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 879,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 881,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 878,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 882,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 880,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 873,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 186,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 874,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 875,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 876,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBubblePackValueData",
																"id": 590
															}
														},
														{
															"id": 877,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBubblePackGraphData",
																"id": 884
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 186,
													"character": 27
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 872,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "BubblePack values config.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 178,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackValueConfig",
										"id": 589
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								883,
								879,
								881,
								878,
								882,
								880,
								873,
								872
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 173,
							"character": 47
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphConfig",
							"id": 800
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisBubblePackGraphData",
							"id": 884
						}
					]
				},
				{
					"id": 884,
					"name": "ChartAxisBubblePackGraphData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack graph data interface."
					},
					"children": [
						{
							"id": 896,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 892,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 894,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 891,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 897,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph label.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 98,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphData.label",
								"id": 808
							}
						},
						{
							"id": 895,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 893,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 886,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 186,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 887,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 888,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 889,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBubblePackValueData",
																"id": 590
															}
														},
														{
															"id": 890,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisBubblePackGraphData",
																"id": 884
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 186,
													"character": 27
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBubblePackGraphConfig.tooltip",
								"id": 873
							}
						},
						{
							"id": 885,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph values data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 197,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackValueData",
										"id": 590
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisBubblePackGraphConfig.values",
								"id": 872
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								896,
								892,
								894,
								891,
								897,
								895,
								893,
								886,
								885
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 192,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisBubblePackGraphConfig",
							"id": 871
						},
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphData",
							"id": 807
						}
					]
				},
				{
					"id": 815,
					"name": "ChartAxisGeneralGraphConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general graph config interface. (bar, area, line, scatter)"
					},
					"children": [
						{
							"id": 828,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 824,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 826,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 823,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 827,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 822,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph stack key. This can be used to stack graphs together in this set. Like stack values will be stacked together.\n(e.g. if graphs 1 and 2 have a stack value is 'first' and graph 3 have a stack value of 'second' only graphs 1 and 2\nwill be stacked together). If undefined, the stacking will fall back to the generator's stack property.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 126,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 825,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 817,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter"
									},
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 818,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 819,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 820,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														},
														{
															"id": 821,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralGraphData",
																"id": 829
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 118,
													"character": 27
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 816,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph values config.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 109,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralValueConfig",
										"id": 484
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								828,
								824,
								826,
								823,
								827,
								822,
								825,
								817,
								816
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 104,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphConfig",
							"id": 800
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralGraphData",
							"id": 829
						}
					]
				},
				{
					"id": 829,
					"name": "ChartAxisGeneralGraphData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general graph data interface. (bar, area, line, scatter)"
					},
					"children": [
						{
							"id": 842,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 838,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 840,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 837,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 843,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph label.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 98,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphData.label",
								"id": 808
							}
						},
						{
							"id": 841,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 836,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph stack key. This can be used to stack graphs together in this set. Like stack values will be stacked together.\n(e.g. if graphs 1 and 2 have a stack value is 'first' and graph 3 have a stack value of 'second' only graphs 1 and 2\nwill be stacked together). If undefined, the stacking will fall back to the generator's stack property.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 126,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGraphConfig.stack",
								"id": 822
							}
						},
						{
							"id": 839,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						},
						{
							"id": 831,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Html content to be displayed in the values tooltip row. A null value will disable the value's tooltip row.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter"
									},
									{
										"tag": "default",
										"text": "(value, graph) => {\n  return `${graph.label}: ${orEquals(value.y, value.y1, value.median)}`\n}\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 118,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 832,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 833,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 834,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralValueData",
																"id": 495
															}
														},
														{
															"id": 835,
															"name": "graph",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartAxisGeneralGraphData",
																"id": 829
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartAxisGraphs.ts",
													"line": 118,
													"character": 27
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralGraphConfig.tooltip",
								"id": 817
							}
						},
						{
							"id": 830,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph values data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 137,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralValueData",
										"id": 495
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartAxisGeneralGraphConfig.values",
								"id": 816
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								842,
								838,
								840,
								837,
								843,
								841,
								836,
								839,
								831,
								830
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 132,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralGraphConfig",
							"id": 815
						},
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphData",
							"id": 807
						}
					]
				},
				{
					"id": 800,
					"name": "ChartAxisSharedGraphConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart shared graph config interface. (bar, area, line, scatter, boxPlot, bubblePack)"
					},
					"children": [
						{
							"id": 806,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							}
						},
						{
							"id": 802,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 804,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 801,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 805,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							}
						},
						{
							"id": 803,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								806,
								802,
								804,
								801,
								805,
								803
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 48,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphData",
							"id": 807
						},
						{
							"type": "reference",
							"name": "ChartAxisGeneralGraphConfig",
							"id": 815
						},
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotGraphConfig",
							"id": 844
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackGraphConfig",
							"id": 871
						}
					]
				},
				{
					"id": 807,
					"name": "ChartAxisSharedGraphData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart shared graph data interface. (bar, area, line, scatter, boxPlot, bubblePack)"
					},
					"children": [
						{
							"id": 814,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Graph annotations. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 87,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 792
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.annotations",
								"id": 806
							}
						},
						{
							"id": 810,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph color. If undefined, the color will fall back to the chart's graphColor accessor.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 59,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.color",
								"id": 802
							}
						},
						{
							"id": 812,
							"name": "group",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph group, should match the group's label. This is useful to group graphs together on the legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 72,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.group",
								"id": 804
							}
						},
						{
							"id": 809,
							"name": "hidden",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initially hides this graph. This value will be modified internally when interacting with the chart legend.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 53,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.hidden",
								"id": 801
							}
						},
						{
							"id": 808,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Graph label.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 98,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 813,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 80,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.legendIcon",
								"id": 805
							}
						},
						{
							"id": 811,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The graph symbol if it's a scatter or bubble pack graph. If undefined, the symbol will fall back to the\ngenerator's symbol property.",
								"tags": [
									{
										"tag": "generators",
										"text": "scatter, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisGraphs.ts",
									"line": 66,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedGraphConfig.symbol",
								"id": 803
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								814,
								810,
								812,
								809,
								808,
								813,
								811
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 93,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedGraphConfig",
							"id": 800
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralGraphData",
							"id": 829
						},
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotGraphData",
							"id": 857
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackGraphData",
							"id": 884
						}
					]
				},
				{
					"id": 898,
					"name": "ChartAxisGraphData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "All axis chart graphs."
					},
					"sources": [
						{
							"fileName": "ChartAxisGraphs.ts",
							"line": 203,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisBubblePackGraphData",
								"id": 884
							},
							{
								"type": "reference",
								"name": "ChartAxisBoxPlotGraphData",
								"id": 857
							},
							{
								"type": "reference",
								"name": "ChartAxisGeneralGraphData",
								"id": 829
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						792,
						844,
						857,
						871,
						884,
						815,
						829,
						800,
						807
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						898
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartAxisGraphs.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 899,
			"name": "\"ChartAxisSets\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartAxisSets.ts",
			"children": [
				{
					"id": 923,
					"name": "ChartAxisBoxPlotSetConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 924,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box plot generators config.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 79,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotGeneratorConfig",
										"id": 745
									}
								]
							}
						},
						{
							"id": 925,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Box plot graphs config.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 85,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotGraphConfig",
										"id": 844
									}
								]
							}
						},
						{
							"id": 927,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 926,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								924,
								925,
								927,
								926
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 74,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 928,
					"name": "ChartAxisBoxPlotSetData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 929,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Box plot generators data.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 93,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotGeneratorData",
										"id": 790
									}
								]
							}
						},
						{
							"id": 930,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Box plot graphs data.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 99,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBoxPlotGraphData",
										"id": 857
									}
								]
							}
						},
						{
							"id": 932,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 931,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								929,
								930,
								932,
								931
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 88,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 913,
					"name": "ChartAxisBubblePackSetConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 914,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Bubble pack generators config.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 51,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackGeneratorConfig",
										"id": 683
									}
								]
							}
						},
						{
							"id": 915,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Bubble pack graphs config.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 57,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackGraphConfig",
										"id": 871
									}
								]
							}
						},
						{
							"id": 917,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 916,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								914,
								915,
								917,
								916
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 46,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 918,
					"name": "ChartAxisBubblePackSetData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 919,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Bubble pack generators data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 65,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackGeneratorData",
										"id": 789
									}
								]
							}
						},
						{
							"id": 920,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Bubble pack graphs data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 71,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisBubblePackGraphData",
										"id": 884
									}
								]
							}
						},
						{
							"id": 922,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 921,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								919,
								920,
								922,
								921
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 60,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 903,
					"name": "ChartAxisGeneralSetConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 904,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "General generators data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralGeneratorConfig",
										"id": 593
									}
								]
							}
						},
						{
							"id": 905,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "General graphs config.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 29,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralGraphConfig",
										"id": 815
									}
								]
							}
						},
						{
							"id": 907,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 906,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								904,
								905,
								907,
								906
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 18,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 908,
					"name": "ChartAxisGeneralSetData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 909,
							"name": "generators",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "General generators data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 37,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralGeneratorData",
										"id": 788
									}
								]
							}
						},
						{
							"id": 910,
							"name": "graphs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "General graphs data.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, area, line, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 43,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartAxisGeneralGraphData",
										"id": 829
									}
								]
							}
						},
						{
							"id": 912,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.xType",
								"id": 902
							}
						},
						{
							"id": 911,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedSetConfig.yType",
								"id": 901
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								909,
								910,
								912,
								911
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 32,
							"character": 40
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedSetConfig",
							"id": 900
						}
					]
				},
				{
					"id": 900,
					"name": "ChartAxisSharedSetConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"children": [
						{
							"id": 902,
							"name": "xType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set xType. If set to x2, the graphs in this set will use the top horizontal axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'x'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 15,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "x"
									},
									{
										"type": "stringLiteral",
										"value": "x2"
									}
								]
							}
						},
						{
							"id": 901,
							"name": "yType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Set yType. If set to y2, the graphs in this set will use the right vertical axis.",
								"tags": [
									{
										"tag": "default",
										"text": "'y'\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisSets.ts",
									"line": 9,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y"
									},
									{
										"type": "stringLiteral",
										"value": "y2"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								902,
								901
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisSets.ts",
							"line": 4,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralSetConfig",
							"id": 903
						},
						{
							"type": "reference",
							"name": "ChartAxisGeneralSetData",
							"id": 908
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackSetConfig",
							"id": 913
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackSetData",
							"id": 918
						},
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotSetConfig",
							"id": 923
						},
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotSetData",
							"id": 928
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						923,
						928,
						913,
						918,
						903,
						908,
						900
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartAxisSets.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 467,
			"name": "\"ChartAxisValues\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartAxisValues.ts",
			"children": [
				{
					"id": 472,
					"name": "Annotation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart value annotation interface."
					},
					"indexSignature": [
						{
							"id": 474,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the annotation for reference."
							},
							"parameters": [
								{
									"id": 475,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 473,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Annotation location for multi factor graphs. This defaults to 'y1' for area graphs and 'median' for box plot graphs.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 33,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "y0"
									},
									{
										"type": "stringLiteral",
										"value": "y1"
									},
									{
										"type": "stringLiteral",
										"value": "maximum"
									},
									{
										"type": "stringLiteral",
										"value": "minimum"
									},
									{
										"type": "stringLiteral",
										"value": "median"
									},
									{
										"type": "stringLiteral",
										"value": "lowerQuartile"
									},
									{
										"type": "stringLiteral",
										"value": "upperQuartile"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								473
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 28,
							"character": 20
						}
					]
				},
				{
					"id": 509,
					"name": "ChartAxisBoxPlotValueConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot value config interface."
					},
					"indexSignature": [
						{
							"id": 516,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 517,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 515,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 514,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 512,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 511,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 513,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 510,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel width for this value's box-plot. If undefined will fall back to the boxPlot generator's width attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 123,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								515,
								514,
								512,
								511,
								513,
								510
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 118,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedValueConfig",
							"id": 476
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotValueData",
							"id": 518
						}
					]
				},
				{
					"id": 565,
					"name": "ChartAxisBubblePackLeafValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack leaf value data interface. (extends all config properties)"
					},
					"indexSignature": [
						{
							"id": 572,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 573,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 571,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 570,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 568,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 566,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Bubble size",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 195,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 567,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 569,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 574,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "X-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 11,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "X.x",
								"id": 469
							}
						},
						{
							"id": 575,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Y-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 22,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Y.y",
								"id": 471
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								571,
								570,
								568,
								566,
								567,
								569,
								574,
								575
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 190,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedValueConfig",
							"id": 476
						},
						{
							"type": "reference",
							"name": "X",
							"id": 468
						},
						{
							"type": "reference",
							"name": "Y",
							"id": 470
						}
					]
				},
				{
					"id": 576,
					"name": "ChartAxisBubblePackParentValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack parent value data interface. (extends all config properties)"
					},
					"indexSignature": [
						{
							"id": 586,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 587,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 585,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 584,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 577,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Bubble children.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 206,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ChartAxisBubblePackLeafValueData",
												"id": 565
											},
											{
												"type": "reference",
												"name": "ChartAxisBubblePackParentValueData",
												"id": 576
											}
										]
									}
								]
							}
						},
						{
							"id": 582,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 578,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Bubble size. This is optional for parent bubbles, if not provided the value will be aggrigated from leaf node sizes.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 212,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 581,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 583,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 579,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "X-value",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 218,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							}
						},
						{
							"id": 580,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y-value",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 224,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								585,
								584,
								577,
								582,
								578,
								581,
								583,
								579,
								580
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 201,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedValueConfig",
							"id": 476
						}
					]
				},
				{
					"id": 484,
					"name": "ChartAxisGeneralValueConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general value config interface. (bar, area, line, scatter)"
					},
					"indexSignature": [
						{
							"id": 493,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 494,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 492,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 491,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 485,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bar centering. If undefined will fall back to the bar generator's\ncentered attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 95,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 489,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 488,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 490,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								492,
								491,
								485,
								489,
								488,
								490
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 89,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedValueConfig",
							"id": 476
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralValueData",
							"id": 495
						}
					]
				},
				{
					"id": 495,
					"name": "ChartAxisGeneralValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart general value data interface. (bar, area, line, scatter) (extends all config properties)"
					},
					"indexSignature": [
						{
							"id": 505,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 506,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 504,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 503,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 497,
							"name": "centered",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Forces bar chart bar centering. If undefined will fall back to the bar generator's\ncentered attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 95,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisGeneralValueConfig.centered",
								"id": 485
							}
						},
						{
							"id": 501,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 500,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 502,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 507,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "X-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 11,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "X.x",
								"id": 469
							}
						},
						{
							"id": 508,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Y-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 22,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Y.y",
								"id": 471
							}
						},
						{
							"id": 496,
							"name": "y0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Y0-value",
								"tags": [
									{
										"tag": "generators",
										"text": "area"
									},
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 112,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								504,
								503,
								497,
								501,
								500,
								502,
								507,
								508,
								496
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 106,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralValueConfig",
							"id": 484
						},
						{
							"type": "reference",
							"name": "X",
							"id": 468
						},
						{
							"type": "reference",
							"name": "Y",
							"id": 470
						}
					]
				},
				{
					"id": 533,
					"name": "ChartAxisHorizontalBoxPlotValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot horizontal value data interface."
					},
					"indexSignature": [
						{
							"id": 546,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 547,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 545,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 544,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 542,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 536,
							"name": "lowerQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Lower-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 146,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.lowerQuartile",
								"id": 521
							}
						},
						{
							"id": 534,
							"name": "maximum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Maximum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 134,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.maximum",
								"id": 519
							}
						},
						{
							"id": 538,
							"name": "median",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Median-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 158,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.median",
								"id": 523
							}
						},
						{
							"id": 535,
							"name": "minimum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Minimum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 140,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.minimum",
								"id": 520
							}
						},
						{
							"id": 539,
							"name": "outliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Outliers-values",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 164,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.outliers",
								"id": 524
							}
						},
						{
							"id": 541,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 543,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 537,
							"name": "upperQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Upper-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 152,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.upperQuartile",
								"id": 522
							}
						},
						{
							"id": 540,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel width for this value's box-plot. If undefined will fall back to the boxPlot generator's width attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 123,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotValueConfig.width",
								"id": 510
							}
						},
						{
							"id": 548,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Y-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 22,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Y.y",
								"id": 471
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								545,
								544,
								542,
								536,
								534,
								538,
								535,
								539,
								541,
								543,
								537,
								540,
								548
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 170,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotValueData",
							"id": 518
						},
						{
							"type": "reference",
							"name": "Y",
							"id": 470
						}
					]
				},
				{
					"id": 518,
					"name": "ChartAxisSharedBoxPlotValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot shared value data interface. (extends all config properties)"
					},
					"indexSignature": [
						{
							"id": 531,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 532,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 530,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 529,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 527,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 521,
							"name": "lowerQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Lower-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 146,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 519,
							"name": "maximum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Maximum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 134,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 523,
							"name": "median",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Median-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 158,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 520,
							"name": "minimum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Minimum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 140,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 524,
							"name": "outliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Outliers-values",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 164,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 526,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 528,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 522,
							"name": "upperQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Upper-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 152,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 525,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel width for this value's box-plot. If undefined will fall back to the boxPlot generator's width attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 123,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotValueConfig.width",
								"id": 510
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								530,
								529,
								527,
								521,
								519,
								523,
								520,
								524,
								526,
								528,
								522,
								525
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 129,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotValueConfig",
							"id": 509
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisHorizontalBoxPlotValueData",
							"id": 533
						},
						{
							"type": "reference",
							"name": "ChartAxisVerticalBoxPlotValueData",
							"id": 549
						}
					]
				},
				{
					"id": 476,
					"name": "ChartAxisSharedValueConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart shared value config interface."
					},
					"indexSignature": [
						{
							"id": 482,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 483,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 481,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							}
						},
						{
							"id": 480,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							}
						},
						{
							"id": 478,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 477,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							}
						},
						{
							"id": 479,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								481,
								480,
								478,
								477,
								479
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 44,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralValueConfig",
							"id": 484
						},
						{
							"type": "reference",
							"name": "ChartAxisBoxPlotValueConfig",
							"id": 509
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackLeafValueData",
							"id": 565
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackParentValueData",
							"id": 576
						}
					]
				},
				{
					"id": 549,
					"name": "ChartAxisVerticalBoxPlotValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot vertical value data interface."
					},
					"indexSignature": [
						{
							"id": 562,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the value for reference."
							},
							"parameters": [
								{
									"id": 563,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 561,
							"name": "annotation",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Bar, line, scatter, and bubble pack graphs have one annotation per value. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, line, scatter, bubblePack"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 78,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Annotation",
								"id": 472
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotation",
								"id": 481
							}
						},
						{
							"id": 560,
							"name": "annotations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's annotations. Area and box plot graphs are allowed to have multiple annotations per value, because each value has multiple factors. Refer to the d3-annotation [docs](https://d3-annotation.susielu.com) for\nadditional annotation configuration.",
								"tags": [
									{
										"tag": "generators",
										"text": "area, boxPlot"
									},
									{
										"tag": "note",
										"text": "Annotation(s) are only passed to the first generator described in the axis chart set.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 70,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Annotation",
										"id": 472
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.annotations",
								"id": 480
							}
						},
						{
							"id": 558,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's corresponding color. If undefined will fall back to the graph's color.",
								"tags": [
									{
										"tag": "generators",
										"text": "bar, scatter, boxPlot, bubblePack\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 55,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.color",
								"id": 478
							}
						},
						{
							"id": 552,
							"name": "lowerQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Lower-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 146,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.lowerQuartile",
								"id": 521
							}
						},
						{
							"id": 550,
							"name": "maximum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Maximum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 134,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.maximum",
								"id": 519
							}
						},
						{
							"id": 554,
							"name": "median",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Median-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 158,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.median",
								"id": 523
							}
						},
						{
							"id": 551,
							"name": "minimum",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Minimum-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 140,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.minimum",
								"id": 520
							}
						},
						{
							"id": 555,
							"name": "outliers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Outliers-values",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 164,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.outliers",
								"id": 524
							}
						},
						{
							"id": 557,
							"name": "symbol",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Point symbol marker. If undefined will fall back to the graph's symbol.",
								"tags": [
									{
										"tag": "generators",
										"text": "bubblePack, scatter\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 49,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "SymbolType"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.symbol",
								"id": 477
							}
						},
						{
							"id": 559,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Value's tooltip HTML content. If undefined will fall back to the graph's tooltip\naccessor. If null will disable the tooltip for this value.",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedValueConfig.tooltip",
								"id": 479
							}
						},
						{
							"id": 553,
							"name": "upperQuartile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Upper-quartile-value",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 152,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisSharedBoxPlotValueData.upperQuartile",
								"id": 522
							}
						},
						{
							"id": 556,
							"name": "width",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel width for this value's box-plot. If undefined will fall back to the boxPlot generator's width attribute.",
								"tags": [
									{
										"tag": "generators",
										"text": "boxPlot\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 123,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartAxisBoxPlotValueConfig.width",
								"id": 510
							}
						},
						{
							"id": 564,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "X-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 11,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "X.x",
								"id": 469
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								561,
								560,
								558,
								552,
								550,
								554,
								551,
								555,
								557,
								559,
								553,
								556,
								564
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 175,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartAxisSharedBoxPlotValueData",
							"id": 518
						},
						{
							"type": "reference",
							"name": "X",
							"id": 468
						}
					]
				},
				{
					"id": 468,
					"name": "X",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart x-value interface."
					},
					"children": [
						{
							"id": 469,
							"name": "x",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "X-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 11,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								469
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 6,
							"character": 11
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralValueData",
							"id": 495
						},
						{
							"type": "reference",
							"name": "ChartAxisVerticalBoxPlotValueData",
							"id": 549
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackLeafValueData",
							"id": 565
						}
					]
				},
				{
					"id": 470,
					"name": "Y",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart y-value interface."
					},
					"children": [
						{
							"id": 471,
							"name": "y",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Y-value",
								"tags": [
									{
										"tag": "generators",
										"text": "all\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartAxisValues.ts",
									"line": 22,
									"character": 3
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "Date"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								471
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 17,
							"character": 11
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartAxisGeneralValueData",
							"id": 495
						},
						{
							"type": "reference",
							"name": "ChartAxisHorizontalBoxPlotValueData",
							"id": 533
						},
						{
							"type": "reference",
							"name": "ChartAxisBubblePackLeafValueData",
							"id": 565
						}
					]
				},
				{
					"id": 588,
					"name": "ChartAxisBoxPlotValueData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart boxPlot value data interface."
					},
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 180,
							"character": 37
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisHorizontalBoxPlotValueData",
								"id": 533
							},
							{
								"type": "reference",
								"name": "ChartAxisVerticalBoxPlotValueData",
								"id": 549
							}
						]
					}
				},
				{
					"id": 589,
					"name": "ChartAxisBubblePackValueConfig",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack value config interface."
					},
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 185,
							"character": 42
						}
					],
					"type": {
						"type": "reference",
						"name": "ChartAxisSharedValueConfig",
						"id": 476
					}
				},
				{
					"id": 590,
					"name": "ChartAxisBubblePackValueData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart bubblePack value data interface. (extends all config properties)"
					},
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 230,
							"character": 40
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisBubblePackLeafValueData",
								"id": 565
							},
							{
								"type": "reference",
								"name": "ChartAxisBubblePackParentValueData",
								"id": 576
							}
						]
					}
				},
				{
					"id": 591,
					"name": "ChartAxisValueData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Axis chart value data interface."
					},
					"sources": [
						{
							"fileName": "ChartAxisValues.ts",
							"line": 235,
							"character": 30
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartAxisBubblePackValueData",
								"id": 590
							},
							{
								"type": "reference",
								"name": "ChartAxisBoxPlotValueData",
								"id": 588
							},
							{
								"type": "reference",
								"name": "ChartAxisGeneralValueData",
								"id": 495
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						472,
						509,
						565,
						576,
						484,
						495,
						533,
						518,
						476,
						549,
						468,
						470
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						588,
						589,
						590,
						591
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartAxisValues.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 9,
			"name": "\"ChartPie\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartPie.ts",
			"children": [
				{
					"id": 26,
					"name": "ChartPieConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Pie chart config interface."
					},
					"children": [
						{
							"id": 57,
							"name": "at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This specifies where the pie chart will reside within the chart frame.\nIt can either be specified as a location descriptor or a center\nposition computator.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height, radius) => { return { x: width / 2, y: height / 2 } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 144,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "OrientCorner",
										"id": 8
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 59,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 60,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 61,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 62,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 144,
													"character": 21
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 63,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 150,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 42,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie arc color accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 118,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 43,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 44,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 45,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 118,
													"character": 18
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 41,
							"name": "cornerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Corner radius of pie arcs in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 112,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 51,
							"name": "donutRatio",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Ratio of the pie's inner radius to outer radius. Given as a decimal between 0 and 1.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 130,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 37,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 88,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39,
							"name": "endAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart end angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "2 * Math.PI\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 100,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 65,
							"name": "legend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart legend configuration options."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 161,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 66,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 69,
													"name": "clickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on click.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 178,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 70,
													"name": "dblclickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on dblclick.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 184,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 67,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the legend.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 166,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 71,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). This can also be provided\nas an accessor to the pie value.",
														"tags": [
															{
																"tag": "default",
																"text": "d3.symbolCircle\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 193,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "SymbolType"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 72,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 73,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 74,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartPieValueData",
																						"id": 17
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"name": "SymbolType"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartPie.ts",
																			"line": 193,
																			"character": 32
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 68,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'bottom'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 172,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														69,
														70,
														67,
														71,
														68
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 40,
							"name": "padAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart angle padding in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 106,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 64,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 156,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 52,
							"name": "radius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart outer radius computator. Usually relative to the container height and width.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(width, height) / 2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 136,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 53,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 54,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 55,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 56,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 33,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 34,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 36,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 81,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 35,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 76,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														36,
														35
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 46,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie arc sort comparator. Use null to order arcs according to the values array.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 124,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 47,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 48,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 49,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														},
														{
															"id": 50,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 124,
													"character": 15
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 38,
							"name": "startAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart start angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 94,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 75,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 199,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 76,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 79,
													"name": "at",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 218,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "OrientCorner",
														"id": 8
													}
												},
												{
													"id": 77,
													"name": "followMouse",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 205,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 80,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's tooltip. A null value will disable the arc's tooltip.",
														"tags": [
															{
																"tag": "default",
																"text": "(d, percent) => `<b>${d.label}</b>: ${d.value} (${d3.format('.0%')(percent)})`\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 224,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 81,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 82,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 83,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartPieValueData",
																						"id": 17
																					}
																				},
																				{
																					"id": 84,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 85,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartPie.ts",
																			"line": 224,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 78,
													"name": "my",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 211,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														79,
														77,
														80,
														78
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 28,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 67,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 29,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 30,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 31,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 32,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieData",
																"id": 86
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 27,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Array of pie values (arcs)."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 61,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartPieValueConfig",
										"id": 10
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								57,
								63,
								42,
								41,
								51,
								37,
								39,
								65,
								40,
								64,
								52,
								33,
								46,
								38,
								75,
								28,
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartPie.ts",
							"line": 57,
							"character": 31
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartPieData",
							"id": 86
						}
					]
				},
				{
					"id": 86,
					"name": "ChartPieData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Pie chart data interface (extends all config properties)."
					},
					"children": [
						{
							"id": 117,
							"name": "at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "This specifies where the pie chart will reside within the chart frame.\nIt can either be specified as a location descriptor or a center\nposition computator.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height, radius) => { return { x: width / 2, y: height / 2 } }\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 144,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "OrientCorner",
										"id": 8
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 118,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 119,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 120,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 121,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 122,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 144,
													"character": 21
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.at",
								"id": 57
							}
						},
						{
							"id": 123,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 150,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.chartPadding",
								"id": 63
							}
						},
						{
							"id": 102,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie arc color accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 118,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 103,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 104,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 105,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 118,
													"character": 18
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.color",
								"id": 42
							}
						},
						{
							"id": 101,
							"name": "cornerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Corner radius of pie arcs in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 112,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.cornerRadius",
								"id": 41
							}
						},
						{
							"id": 111,
							"name": "donutRatio",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Ratio of the pie's inner radius to outer radius. Given as a decimal between 0 and 1.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 130,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.donutRatio",
								"id": 51
							}
						},
						{
							"id": 97,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 88,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.duration",
								"id": 37
							}
						},
						{
							"id": 99,
							"name": "endAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart end angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "2 * Math.PI\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 100,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.endAngle",
								"id": 39
							}
						},
						{
							"id": 125,
							"name": "legend",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart legend configuration options."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 161,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 126,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 129,
													"name": "clickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on click.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 178,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 130,
													"name": "dblclickable",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Whether the legend will hide / show arcs on dblclick.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 184,
															"character": 16
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 127,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the legend.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 166,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 131,
													"name": "icon",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). This can also be provided\nas an accessor to the pie value.",
														"tags": [
															{
																"tag": "default",
																"text": "d3.symbolCircle\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 193,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "SymbolType"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 132,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 133,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 134,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartPieValueData",
																						"id": 17
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reference",
																						"name": "SymbolType"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartPie.ts",
																			"line": 193,
																			"character": 32
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 128,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Legend orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'bottom'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 172,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														129,
														130,
														127,
														131,
														128
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.legend",
								"id": 65
							}
						},
						{
							"id": 100,
							"name": "padAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart angle padding in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 106,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.padAngle",
								"id": 40
							}
						},
						{
							"id": 124,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the legend) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 156,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.padding",
								"id": 64
							}
						},
						{
							"id": 112,
							"name": "radius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart outer radius computator. Usually relative to the container height and width.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(width, height) / 2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 136,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 113,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 114,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 115,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 116,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.radius",
								"id": 52
							}
						},
						{
							"id": 93,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 72,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 94,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 96,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 81,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 95,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 76,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														96,
														95
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.size",
								"id": 33
							}
						},
						{
							"id": 106,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie arc sort comparator. Use null to order arcs according to the values array.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 124,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 107,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 108,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 109,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														},
														{
															"id": 110,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieValueData",
																"id": 17
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartPie.ts",
													"line": 124,
													"character": 15
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.sort",
								"id": 46
							}
						},
						{
							"id": 98,
							"name": "startAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Pie chart start angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 94,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.startAngle",
								"id": 38
							}
						},
						{
							"id": 135,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 199,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 136,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 139,
													"name": "at",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 218,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "OrientCorner",
														"id": 8
													}
												},
												{
													"id": 137,
													"name": "followMouse",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 205,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 140,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's tooltip. A null value will disable the arc's tooltip.",
														"tags": [
															{
																"tag": "default",
																"text": "(d, percent) => `<b>${d.label}</b>: ${d.value} (${d3.format('.0%')(percent)})`\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 224,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 141,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 142,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 143,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartPieValueData",
																						"id": 17
																					}
																				},
																				{
																					"id": 144,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 145,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartPie.ts",
																			"line": 224,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 138,
													"name": "my",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartPie.ts",
															"line": 211,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														139,
														137,
														140,
														138
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.tooltip",
								"id": 75
							}
						},
						{
							"id": 88,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 67,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 89,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 90,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 91,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 92,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartPieData",
																"id": 86
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieConfig.updated",
								"id": 28
							}
						},
						{
							"id": 87,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Array of pie values."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 235,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartPieValueData",
										"id": 17
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartPieConfig.values",
								"id": 27
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								117,
								123,
								102,
								101,
								111,
								97,
								99,
								125,
								100,
								124,
								112,
								93,
								106,
								98,
								135,
								88,
								87
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartPie.ts",
							"line": 231,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartPieConfig",
							"id": 26
						}
					]
				},
				{
					"id": 10,
					"name": "ChartPieValueConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Pie chart value config interface."
					},
					"indexSignature": [
						{
							"id": 15,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the pie value for reference."
							},
							"parameters": [
								{
									"id": 16,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 11,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the pie's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 11,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 13,
							"name": "empty",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc visibility state, this will be modified internally by the pie chart."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 14,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							}
						},
						{
							"id": 12,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the pie's arc tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								11,
								13,
								14,
								12
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartPie.ts",
							"line": 7,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartPieValueData",
							"id": 17
						}
					]
				},
				{
					"id": 17,
					"name": "ChartPieValueData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Pie chart value interface (extends all config properties)."
					},
					"indexSignature": [
						{
							"id": 24,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the pie value for reference."
							},
							"parameters": [
								{
									"id": 25,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 20,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the pie's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 11,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieValueConfig.color",
								"id": 11
							}
						},
						{
							"id": 22,
							"name": "empty",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc visibility state, this will be modified internally by the pie chart."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 22,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieValueConfig.empty",
								"id": 13
							}
						},
						{
							"id": 18,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Pie arc label."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 45,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23,
							"name": "legendIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Legend icon symbol type. This can either be a font awesome character code\n(e.g. '\\uf111' for a circle), [d3 symbol](https://github.com/d3/d3-shape#symbols)\nor [d2b symbol](https://docs.d2bjs.org/shape/symbols.html). If set, this will\noverride the legend's icon property."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "SymbolType"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieValueConfig.legendIcon",
								"id": 14
							}
						},
						{
							"id": 21,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the pie's arc tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartPieValueConfig.tooltip",
								"id": 12
							}
						},
						{
							"id": 19,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Pie arc value."
							},
							"sources": [
								{
									"fileName": "ChartPie.ts",
									"line": 50,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								20,
								22,
								18,
								23,
								21,
								19
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartPie.ts",
							"line": 41,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartPieValueConfig",
							"id": 10
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						26,
						86,
						10,
						17
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartPie.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 146,
			"name": "\"ChartSankey\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartSankey.ts",
			"children": [
				{
					"id": 173,
					"name": "ChartSankeyConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart config interface."
					},
					"children": [
						{
							"id": 185,
							"name": "iterations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of relaxation iterations used while generating the sankey layout.",
								"tags": [
									{
										"tag": "default",
										"text": "6\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 120,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 214,
							"name": "link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sankey link configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 210,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 215,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 216,
													"name": "sourceColor",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey link source color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "(data, sourceColor) => sourceColor\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 215,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 217,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 218,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 219,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyLinkData",
																						"id": 164
																					}
																				},
																				{
																					"id": 220,
																					"name": "sourceColor",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 215,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 221,
													"name": "targetColor",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey link target color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "(data, targetColor) => targetColor\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 221,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 222,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 223,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 224,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyLinkData",
																						"id": 164
																					}
																				},
																				{
																					"id": 225,
																					"name": "targetColor",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 221,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 226,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Link tooltip configuration options."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 226,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 227,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 230,
																			"name": "at",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 245,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "OrientCorner",
																				"id": 8
																			}
																		},
																		{
																			"id": 228,
																			"name": "followMouse",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "true\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 232,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "false"
																					},
																					{
																						"type": "intrinsic",
																						"name": "true"
																					}
																				]
																			}
																		},
																		{
																			"id": 231,
																			"name": "html",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Html content to be displayed in the link's tooltip.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "function (data, source, target) {\n  return `\n    <b>${source.name}</b>\n    <i class='fa fa-arrow-right d2b-sankey-link-arrow' aria-hidden='true'></i>\n    <b>${target.name}</b>:\n    ${data.value}\n  `\n}\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 258,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 232,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"signatures": [
																								{
																									"id": 233,
																									"name": "__call",
																									"kind": 4096,
																									"kindString": "Call signature",
																									"flags": {},
																									"parameters": [
																										{
																											"id": 234,
																											"name": "data",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyLinkData",
																												"id": 164
																											}
																										},
																										{
																											"id": 235,
																											"name": "source",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										},
																										{
																											"id": 236,
																											"name": "target",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"sources": [
																								{
																									"fileName": "ChartSankey.ts",
																									"line": 258,
																									"character": 21
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 229,
																			"name": "my",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 238,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Orient",
																				"id": 7
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				230,
																				228,
																				231,
																				229
																			]
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														216,
														221,
														226
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 175,
							"name": "links",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Array of sankey links."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 93,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartSankeyLinkConfig",
										"id": 158
									}
								]
							}
						},
						{
							"id": 187,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sankey node configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 131,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 188,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 189,
													"name": "align",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "How to align sankey nodes.",
														"tags": [
															{
																"tag": "default",
																"text": "'justify'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 136,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "stringLiteral",
																"value": "left"
															},
															{
																"type": "stringLiteral",
																"value": "right"
															},
															{
																"type": "stringLiteral",
																"value": "center"
															},
															{
																"type": "stringLiteral",
																"value": "justify"
															}
														]
													}
												},
												{
													"id": 199,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey node color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "data => colorGenerator(data.name)\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 173,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 200,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 201,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 202,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				},
																				{
																					"id": 203,
																					"name": "key",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 173,
																			"character": 20
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 197,
													"name": "draggableX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable / disable node dragging in the horizontal direction.",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 161,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 198,
													"name": "draggableY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable / disable node dragging in the vertical direction.",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 167,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 196,
													"name": "labelWrapLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The number of characters to start wrapping the node label.",
														"tags": [
															{
																"tag": "default",
																"text": "Infinity\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 155,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 190,
													"name": "padding",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Vertical separation between nodes.",
														"tags": [
															{
																"tag": "default",
																"text": "8\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 142,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 191,
													"name": "sort",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sort comparator for sankey node columns. Use null to order nodes according to\nthe nodes array. If undefined, the nodes will be sorted according to the layout.",
														"tags": [
															{
																"tag": "default",
																"text": "undefined\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 149,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 192,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 193,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 194,
																					"name": "a",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				},
																				{
																					"id": 195,
																					"name": "b",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 149,
																			"character": 29
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 204,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Node tooltip configuration options."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 178,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 205,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 208,
																			"name": "at",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 197,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "OrientCorner",
																				"id": 8
																			}
																		},
																		{
																			"id": 206,
																			"name": "followMouse",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "true\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 184,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "false"
																					},
																					{
																						"type": "intrinsic",
																						"name": "true"
																					}
																				]
																			}
																		},
																		{
																			"id": 209,
																			"name": "html",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Html content to be displayed in the node's tooltip.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "(data, value) => `<b>${data.name}</b>: ${value}`\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 203,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 210,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"signatures": [
																								{
																									"id": 211,
																									"name": "__call",
																									"kind": 4096,
																									"kindString": "Call signature",
																									"flags": {},
																									"parameters": [
																										{
																											"id": 212,
																											"name": "data",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										},
																										{
																											"id": 213,
																											"name": "value",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "intrinsic",
																												"name": "number"
																											}
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"sources": [
																								{
																									"fileName": "ChartSankey.ts",
																									"line": 203,
																									"character": 21
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 207,
																			"name": "my",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 190,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Orient",
																				"id": 7
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				208,
																				206,
																				209,
																				207
																			]
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														189,
														199,
														197,
														198,
														196,
														190,
														191,
														204
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 174,
							"name": "nodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Array of sankey nodes."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 88,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartSankeyNodeConfig",
										"id": 147
									}
								]
							}
						},
						{
							"id": 186,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 126,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 181,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 104,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 182,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 184,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 113,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 183,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 108,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														184,
														183
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 176,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 177,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 178,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 179,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 180,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSankeyData",
																"id": 237
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								185,
								214,
								175,
								187,
								174,
								186,
								181,
								176
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 84,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSankeyData",
							"id": 237
						}
					]
				},
				{
					"id": 237,
					"name": "ChartSankeyData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart data interface (extends all config properties)."
					},
					"children": [
						{
							"id": 249,
							"name": "iterations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Number of relaxation iterations used while generating the sankey layout.",
								"tags": [
									{
										"tag": "default",
										"text": "6\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 120,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.iterations",
								"id": 185
							}
						},
						{
							"id": 278,
							"name": "link",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sankey link configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 210,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 279,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 280,
													"name": "sourceColor",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey link source color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "(data, sourceColor) => sourceColor\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 215,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 281,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 282,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 283,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyLinkData",
																						"id": 164
																					}
																				},
																				{
																					"id": 284,
																					"name": "sourceColor",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 215,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 285,
													"name": "targetColor",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey link target color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "(data, targetColor) => targetColor\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 221,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 286,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 287,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 288,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyLinkData",
																						"id": 164
																					}
																				},
																				{
																					"id": 289,
																					"name": "targetColor",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 221,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 290,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Link tooltip configuration options."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 226,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 291,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 294,
																			"name": "at",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 245,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "OrientCorner",
																				"id": 8
																			}
																		},
																		{
																			"id": 292,
																			"name": "followMouse",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "true\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 232,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "false"
																					},
																					{
																						"type": "intrinsic",
																						"name": "true"
																					}
																				]
																			}
																		},
																		{
																			"id": 295,
																			"name": "html",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Html content to be displayed in the link's tooltip.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "function (data, source, target) {\n  return `\n    <b>${source.name}</b>\n    <i class='fa fa-arrow-right d2b-sankey-link-arrow' aria-hidden='true'></i>\n    <b>${target.name}</b>:\n    ${data.value}\n  `\n}\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 258,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 296,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"signatures": [
																								{
																									"id": 297,
																									"name": "__call",
																									"kind": 4096,
																									"kindString": "Call signature",
																									"flags": {},
																									"parameters": [
																										{
																											"id": 298,
																											"name": "data",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyLinkData",
																												"id": 164
																											}
																										},
																										{
																											"id": 299,
																											"name": "source",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										},
																										{
																											"id": 300,
																											"name": "target",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"sources": [
																								{
																									"fileName": "ChartSankey.ts",
																									"line": 258,
																									"character": 21
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 293,
																			"name": "my",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 238,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Orient",
																				"id": 7
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				294,
																				292,
																				295,
																				293
																			]
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														280,
														285,
														290
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.link",
								"id": 214
							}
						},
						{
							"id": 239,
							"name": "links",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Array of sankey links."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 275,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartSankeyLinkData",
										"id": 164
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartSankeyConfig.links",
								"id": 175
							}
						},
						{
							"id": 251,
							"name": "node",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sankey node configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 131,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 252,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 253,
													"name": "align",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "How to align sankey nodes.",
														"tags": [
															{
																"tag": "default",
																"text": "'justify'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 136,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "stringLiteral",
																"value": "left"
															},
															{
																"type": "stringLiteral",
																"value": "right"
															},
															{
																"type": "stringLiteral",
																"value": "center"
															},
															{
																"type": "stringLiteral",
																"value": "justify"
															}
														]
													}
												},
												{
													"id": 263,
													"name": "color",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sankey node color accessor function.",
														"tags": [
															{
																"tag": "default",
																"text": "data => colorGenerator(data.name)\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 173,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 264,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 265,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 266,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				},
																				{
																					"id": 267,
																					"name": "key",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 173,
																			"character": 20
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 261,
													"name": "draggableX",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable / disable node dragging in the horizontal direction.",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 161,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 262,
													"name": "draggableY",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable / disable node dragging in the vertical direction.",
														"tags": [
															{
																"tag": "default",
																"text": "false\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 167,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 260,
													"name": "labelWrapLength",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The number of characters to start wrapping the node label.",
														"tags": [
															{
																"tag": "default",
																"text": "Infinity\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 155,
															"character": 19
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 254,
													"name": "padding",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Vertical separation between nodes.",
														"tags": [
															{
																"tag": "default",
																"text": "8\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 142,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 255,
													"name": "sort",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Sort comparator for sankey node columns. Use null to order nodes according to\nthe nodes array. If undefined, the nodes will be sorted according to the layout.",
														"tags": [
															{
																"tag": "default",
																"text": "undefined\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 149,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 256,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 257,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 258,
																					"name": "a",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				},
																				{
																					"id": 259,
																					"name": "b",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSankeyNodeData",
																						"id": 152
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSankey.ts",
																			"line": 149,
																			"character": 29
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 268,
													"name": "tooltip",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Node tooltip configuration options."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 178,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 269,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 272,
																			"name": "at",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 197,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "OrientCorner",
																				"id": 8
																			}
																		},
																		{
																			"id": 270,
																			"name": "followMouse",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "true\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 184,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "false"
																					},
																					{
																						"type": "intrinsic",
																						"name": "true"
																					}
																				]
																			}
																		},
																		{
																			"id": 273,
																			"name": "html",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Html content to be displayed in the node's tooltip.",
																				"tags": [
																					{
																						"tag": "default",
																						"text": "(data, value) => `<b>${data.name}</b>: ${value}`\n"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 203,
																					"character": 10
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 274,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"signatures": [
																								{
																									"id": 275,
																									"name": "__call",
																									"kind": 4096,
																									"kindString": "Call signature",
																									"flags": {},
																									"parameters": [
																										{
																											"id": 276,
																											"name": "data",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "reference",
																												"name": "ChartSankeyNodeData",
																												"id": 152
																											}
																										},
																										{
																											"id": 277,
																											"name": "value",
																											"kind": 32768,
																											"kindString": "Parameter",
																											"flags": {},
																											"type": {
																												"type": "intrinsic",
																												"name": "number"
																											}
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							],
																							"sources": [
																								{
																									"fileName": "ChartSankey.ts",
																									"line": 203,
																									"character": 21
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 271,
																			"name": "my",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isExternal": true,
																				"isOptional": true
																			},
																			"comment": {
																				"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
																			},
																			"sources": [
																				{
																					"fileName": "ChartSankey.ts",
																					"line": 190,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Orient",
																				"id": 7
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				272,
																				270,
																				273,
																				271
																			]
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														253,
														263,
														261,
														262,
														260,
														254,
														255,
														268
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.node",
								"id": 187
							}
						},
						{
							"id": 238,
							"name": "nodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Array of sankey nodes."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 270,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "ChartSankeyNodeData",
										"id": 152
									}
								]
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartSankeyConfig.nodes",
								"id": 174
							}
						},
						{
							"id": 250,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 126,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.padding",
								"id": 186
							}
						},
						{
							"id": 245,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 104,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 246,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 248,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 113,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 247,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartSankey.ts",
															"line": 108,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														248,
														247
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.size",
								"id": 181
							}
						},
						{
							"id": 240,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 99,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 241,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 242,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 243,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 244,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSankeyData",
																"id": 237
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyConfig.updated",
								"id": 176
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								249,
								278,
								239,
								251,
								238,
								250,
								245,
								240
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 266,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSankeyConfig",
							"id": 173
						}
					]
				},
				{
					"id": 158,
					"name": "ChartSankeyLinkConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart link config interface."
					},
					"indexSignature": [
						{
							"id": 162,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sankey link for reference."
							},
							"parameters": [
								{
									"id": 163,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 159,
							"name": "sourceColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link source color, if set, this will override the sankey's link.sourceColor accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 41,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 160,
							"name": "targetColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link target color, if set, this will override the sankey's link.targetColor accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 46,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 161,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link tooltip content, if set, this will override the sankey's link.tooltip accessor.\nUse null to disable the tooltip for this link."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								159,
								160,
								161
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 37,
							"character": 38
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSankeyLinkData",
							"id": 164
						}
					]
				},
				{
					"id": 164,
					"name": "ChartSankeyLinkData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart value interface (extends all config properties)."
					},
					"indexSignature": [
						{
							"id": 171,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sankey link for reference."
							},
							"parameters": [
								{
									"id": 172,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 165,
							"name": "source",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Link source name. Should refer to the source node's name."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 67,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 168,
							"name": "sourceColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link source color, if set, this will override the sankey's link.sourceColor accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 41,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyLinkConfig.sourceColor",
								"id": 159
							}
						},
						{
							"id": 166,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Link target name. Should refer to the target node's name."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 72,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 169,
							"name": "targetColor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link target color, if set, this will override the sankey's link.targetColor accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 46,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyLinkConfig.targetColor",
								"id": 160
							}
						},
						{
							"id": 170,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Link tooltip content, if set, this will override the sankey's link.tooltip accessor.\nUse null to disable the tooltip for this link."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 52,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyLinkConfig.tooltip",
								"id": 161
							}
						},
						{
							"id": 167,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Link value."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 77,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								165,
								168,
								166,
								169,
								170,
								167
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 63,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSankeyLinkConfig",
							"id": 158
						}
					]
				},
				{
					"id": 147,
					"name": "ChartSankeyNodeConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart node config interface."
					},
					"indexSignature": [
						{
							"id": 150,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sankey node for reference."
							},
							"parameters": [
								{
									"id": 151,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 148,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Node color, if set, this will override the sankey's node.color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 149,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Node tooltip content, if set, this will override the sankey's node.tooltip accessor.\nUse null to disable the tooltip for this node."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								148,
								149
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 6,
							"character": 38
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSankeyNodeData",
							"id": 152
						}
					]
				},
				{
					"id": 152,
					"name": "ChartSankeyNodeData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sankey chart node data interface (extends all config properties)."
					},
					"indexSignature": [
						{
							"id": 156,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sankey node for reference."
							},
							"parameters": [
								{
									"id": 157,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 154,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Node color, if set, this will override the sankey's node.color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyNodeConfig.color",
								"id": 148
							}
						},
						{
							"id": 153,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Node name."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 31,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Node tooltip content, if set, this will override the sankey's node.tooltip accessor.\nUse null to disable the tooltip for this node."
							},
							"sources": [
								{
									"fileName": "ChartSankey.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSankeyNodeConfig.tooltip",
								"id": 149
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								154,
								153,
								155
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSankey.ts",
							"line": 27,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSankeyNodeConfig",
							"id": 147
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						173,
						237,
						158,
						164,
						147,
						152
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartSankey.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 301,
			"name": "\"ChartSunburst\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/ChartSunburst.ts",
			"children": [
				{
					"id": 336,
					"name": "ChartSunburstConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst chart config interface."
					},
					"children": [
						{
							"id": 368,
							"name": "ancestorBandingExponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Ancestor (inner) band sizing exponent. An exponent of 1 will make the bands equal size.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 193,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 363,
							"name": "ancestorPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the pixel distance between the ancestor (inner) and descendant (outer) bands.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 163,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 380,
							"name": "breadcrumbs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart breadcrumbs configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 216,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 381,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 382,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the breadcrumbs.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 221,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 384,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's breadcrumb. A null value will disable the arc's breadcrumb.",
														"tags": [
															{
																"tag": "default",
																"text": "function (data, value, percent) {\n  return `\n    <div class = 'd2b-sunburst-breadcrumb'>\n      <div class = 'd2b-sunburst-label'>\n        ${data.label}\n      </div>\n      <div class = 'd2b-sunburst-value'>\n        ${value}\n        ${percent > 1 ? '' : `<div class = 'd2b-sunburst-percent'> ${d3.format('.0%')(percent)} </div>`}\n      </div>\n    </div>\n  `\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 245,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 385,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 386,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 387,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSunburstNodeData",
																						"id": 466
																					}
																				},
																				{
																					"id": 388,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 389,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSunburst.ts",
																			"line": 245,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 383,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Breadcrumbs orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'right'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 227,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														382,
														384,
														383
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 361,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the breadcrumbs) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 151,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 352,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst arc color accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 139,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 353,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 354,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 355,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 139,
													"character": 18
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 351,
							"name": "cornerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Corner radius of sunburst arcs in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 133,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 369,
							"name": "descendantBandingExponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Descendant (outer) band sizing exponent. An exponent of 1 will make the bands equal size.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 199,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 364,
							"name": "descendantLevels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The maximum number of descendant (outer) bands to show at a time. Deeper bands will be drawn when zooming.",
								"tags": [
									{
										"tag": "default",
										"text": "Infinity\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 169,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 347,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 349,
							"name": "endAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart end angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "2 * Math.PI\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 121,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 367,
							"name": "highlight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst hover to highlight.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 187,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 370,
							"name": "innerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel inner radius of the sunburst chart. Usually relative to the width / height of the container.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(width, height) / 2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 205,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 371,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 372,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 373,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 374,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 205,
													"character": 24
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 375,
							"name": "outerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel outer radius of the sunburst chart. Usually relative to the width / height of the container.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(50, Math.min(width, height) / 4)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 211,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 376,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 377,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 378,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 379,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 211,
													"character": 24
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 350,
							"name": "padAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart angle padding in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 362,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the breadcrumbs) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 157,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							}
						},
						{
							"id": 337,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The sunburst root node config."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 82,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig",
								"id": 302
							}
						},
						{
							"id": 365,
							"name": "showLabels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst labels.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 175,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 343,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 93,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 344,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 346,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 102,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 345,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 97,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														346,
														345
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 356,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst arc sort comparator. Use null to order arcs according to the children array.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 145,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 357,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 358,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 359,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														},
														{
															"id": 360,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 145,
													"character": 15
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 348,
							"name": "startAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart start angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 115,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 390,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 251,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 391,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 394,
													"name": "at",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 270,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "OrientCorner",
														"id": 8
													}
												},
												{
													"id": 392,
													"name": "followMouse",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 257,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 395,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's tooltip. A null value will disable the arc's tooltip.",
														"tags": [
															{
																"tag": "default",
																"text": "function (data, value, percent) {\n  return `\n    <div class = 'd2b-sunburst-tooltip'>\n      <div class = 'd2b-sunburst-label'>\n        ${data.label}\n      </div>\n      <div class = 'd2b-sunburst-value'>\n        ${value}\n        ${percent > 1 ? '' : `<div class = 'd2b-sunburst-percent'> ${d3.format('.0%')(percent)} </div>`}\n      </div>\n    </div>\n  `\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 288,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 396,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 397,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 398,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSunburstNodeData",
																						"id": 466
																					}
																				},
																				{
																					"id": 399,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 400,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSunburst.ts",
																			"line": 288,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 393,
													"name": "my",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 263,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														394,
														392,
														395,
														393
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 338,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 339,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 340,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 341,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 342,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 366,
							"name": "zoomable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst click to zoom.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 181,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								368,
								363,
								380,
								361,
								352,
								351,
								369,
								364,
								347,
								349,
								367,
								370,
								375,
								350,
								362,
								337,
								365,
								343,
								356,
								348,
								390,
								338,
								366
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 78,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSunburstData",
							"id": 401
						}
					]
				},
				{
					"id": 401,
					"name": "ChartSunburstData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst chart data interface (extends all config properties)."
					},
					"children": [
						{
							"id": 433,
							"name": "ancestorBandingExponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Ancestor (inner) band sizing exponent. An exponent of 1 will make the bands equal size.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 193,
									"character": 25
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.ancestorBandingExponent",
								"id": 368
							}
						},
						{
							"id": 428,
							"name": "ancestorPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Defines the pixel distance between the ancestor (inner) and descendant (outer) bands.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 163,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.ancestorPadding",
								"id": 363
							}
						},
						{
							"id": 445,
							"name": "breadcrumbs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart breadcrumbs configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 216,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 446,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 447,
													"name": "enabled",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Enable or disable the breadcrumbs.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 221,
															"character": 11
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 449,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's breadcrumb. A null value will disable the arc's breadcrumb.",
														"tags": [
															{
																"tag": "default",
																"text": "function (data, value, percent) {\n  return `\n    <div class = 'd2b-sunburst-breadcrumb'>\n      <div class = 'd2b-sunburst-label'>\n        ${data.label}\n      </div>\n      <div class = 'd2b-sunburst-value'>\n        ${value}\n        ${percent > 1 ? '' : `<div class = 'd2b-sunburst-percent'> ${d3.format('.0%')(percent)} </div>`}\n      </div>\n    </div>\n  `\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 245,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 450,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 451,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 452,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSunburstNodeData",
																						"id": 466
																					}
																				},
																				{
																					"id": 453,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 454,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSunburst.ts",
																			"line": 245,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 448,
													"name": "orient",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Breadcrumbs orientation, relative to the chart.",
														"tags": [
															{
																"tag": "default",
																"text": "'right'\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 227,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														447,
														449,
														448
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.breadcrumbs",
								"id": 380
							}
						},
						{
							"id": 426,
							"name": "chartPadding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's inner padding (excluding the breadcrumbs) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 151,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.chartPadding",
								"id": 361
							}
						},
						{
							"id": 417,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst arc color accessor function.",
								"tags": [
									{
										"tag": "default",
										"text": "d => colorGenerator(d.label)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 139,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 418,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 419,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 420,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 139,
													"character": 18
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.color",
								"id": 352
							}
						},
						{
							"id": 416,
							"name": "cornerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Corner radius of sunburst arcs in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 133,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.cornerRadius",
								"id": 351
							}
						},
						{
							"id": 434,
							"name": "descendantBandingExponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Descendant (outer) band sizing exponent. An exponent of 1 will make the bands equal size.",
								"tags": [
									{
										"tag": "default",
										"text": "1\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 199,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.descendantBandingExponent",
								"id": 369
							}
						},
						{
							"id": 429,
							"name": "descendantLevels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The maximum number of descendant (outer) bands to show at a time. Deeper bands will be drawn when zooming.",
								"tags": [
									{
										"tag": "default",
										"text": "Infinity\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 169,
									"character": 18
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.descendantLevels",
								"id": 364
							}
						},
						{
							"id": 412,
							"name": "duration",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The internal chart duration in miliseconds.",
								"tags": [
									{
										"tag": "default",
										"text": "250\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.duration",
								"id": 347
							}
						},
						{
							"id": 414,
							"name": "endAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart end angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "2 * Math.PI\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 121,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.endAngle",
								"id": 349
							}
						},
						{
							"id": 432,
							"name": "highlight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst hover to highlight.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 187,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.highlight",
								"id": 367
							}
						},
						{
							"id": 435,
							"name": "innerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel inner radius of the sunburst chart. Usually relative to the width / height of the container.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(width, height) / 2\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 205,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 436,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 437,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 438,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 439,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 205,
													"character": 24
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.innerRadius",
								"id": 370
							}
						},
						{
							"id": 440,
							"name": "outerRadius",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel outer radius of the sunburst chart. Usually relative to the width / height of the container.",
								"tags": [
									{
										"tag": "default",
										"text": "(width, height) => Math.min(50, Math.min(width, height) / 4)\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 211,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 441,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 442,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 443,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 444,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 211,
													"character": 24
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.outerRadius",
								"id": 375
							}
						},
						{
							"id": 415,
							"name": "padAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart angle padding in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.padAngle",
								"id": 350
							}
						},
						{
							"id": 427,
							"name": "padding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The chart's outer padding (including the breadcrumbs) in pixels.",
								"tags": [
									{
										"tag": "default",
										"text": "10\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 157,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "Padding",
										"id": 2
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.padding",
								"id": 362
							}
						},
						{
							"id": 402,
							"name": "root",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "The sunburst root node data."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 299,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ChartSunburstNodeData",
								"id": 466
							},
							"overwrites": {
								"type": "reference",
								"name": "ChartSunburstConfig.root",
								"id": 337
							}
						},
						{
							"id": 430,
							"name": "showLabels",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst labels.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 175,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.showLabels",
								"id": 365
							}
						},
						{
							"id": 408,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "The pixel size of the chart."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 93,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 409,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 411,
													"name": "height",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel height of the chart. If not given, the container height will be used."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 102,
															"character": 10
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 410,
													"name": "width",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "The pixel width of the chart. If not given, the container width will be used."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 97,
															"character": 9
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														411,
														410
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.size",
								"id": 343
							}
						},
						{
							"id": 421,
							"name": "sort",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst arc sort comparator. Use null to order arcs according to the children array.",
								"tags": [
									{
										"tag": "default",
										"text": "null\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 145,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "null"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 422,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 423,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 424,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														},
														{
															"id": 425,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "ChartSunburst.ts",
													"line": 145,
													"character": 15
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.sort",
								"id": 356
							}
						},
						{
							"id": 413,
							"name": "startAngle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst chart start angle in radians.",
								"tags": [
									{
										"tag": "default",
										"text": "0\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 115,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.startAngle",
								"id": 348
							}
						},
						{
							"id": 455,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Chart tooltip configuration options."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 251,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 456,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 459,
													"name": "at",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "This specifies where the tooltip will be positioned relative to the hovered\nitem. By default, this will alternate between 'center left' and 'center right'\ndepending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 270,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "OrientCorner",
														"id": 8
													}
												},
												{
													"id": 457,
													"name": "followMouse",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Tooltip will follow the mouse instead of being placed in a static position\nrelative to the hovered element.",
														"tags": [
															{
																"tag": "default",
																"text": "true\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 257,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "false"
															},
															{
																"type": "intrinsic",
																"name": "true"
															}
														]
													}
												},
												{
													"id": 460,
													"name": "html",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Html content to be displayed in the arc's tooltip. A null value will disable the arc's tooltip.",
														"tags": [
															{
																"tag": "default",
																"text": "function (data, value, percent) {\n  return `\n    <div class = 'd2b-sunburst-tooltip'>\n      <div class = 'd2b-sunburst-label'>\n        ${data.label}\n      </div>\n      <div class = 'd2b-sunburst-value'>\n        ${value}\n        ${percent > 1 ? '' : `<div class = 'd2b-sunburst-percent'> ${d3.format('.0%')(percent)} </div>`}\n      </div>\n    </div>\n  `\n}\n"
															}
														]
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 288,
															"character": 8
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "null"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 461,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"signatures": [
																		{
																			"id": 462,
																			"name": "__call",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 463,
																					"name": "data",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "ChartSunburstNodeData",
																						"id": 466
																					}
																				},
																				{
																					"id": 464,
																					"name": "value",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 465,
																					"name": "percent",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "null"
																					}
																				]
																			}
																		}
																	],
																	"sources": [
																		{
																			"fileName": "ChartSunburst.ts",
																			"line": 288,
																			"character": 26
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 458,
													"name": "my",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"shortText": "Orientation of the tooltip. By default, this will alternate between 'left' and\n'right' depending on the position of the cursor relative to the viewport."
													},
													"sources": [
														{
															"fileName": "ChartSunburst.ts",
															"line": 263,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"name": "Orient",
														"id": 7
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														459,
														457,
														460,
														458
													]
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.tooltip",
								"id": 390
							}
						},
						{
							"id": 403,
							"name": "updated",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Event hook for d2b charts. Will be after the chart is rendered.\nNote: Transitions may still occur after this lifecycle hook fires."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 88,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 404,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 405,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 406,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														},
														{
															"id": 407,
															"name": "data",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ChartSunburstNodeData",
																"id": 466
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.updated",
								"id": 338
							}
						},
						{
							"id": 431,
							"name": "zoomable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Enable or disable the sunburst click to zoom.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 181,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstConfig.zoomable",
								"id": 366
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								433,
								428,
								445,
								426,
								417,
								416,
								434,
								429,
								412,
								414,
								432,
								435,
								440,
								415,
								427,
								402,
								430,
								408,
								421,
								413,
								455,
								403,
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 295,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSunburstConfig",
							"id": 336
						}
					]
				},
				{
					"id": 317,
					"name": "ChartSunburstLeafNodeData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst leaf-node data interface (extends all node data)."
					},
					"indexSignature": [
						{
							"id": 324,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sunburst node for reference."
							},
							"parameters": [
								{
									"id": 325,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 322,
							"name": "breadcrumb",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc breadcrumb content, if set, this will override the sunburst's breadcrumb accessor.\nUse null to disable the breadcrumb for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.breadcrumb",
								"id": 305
							}
						},
						{
							"id": 320,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the sunburst's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.color",
								"id": 303
							}
						},
						{
							"id": 319,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Sunburst node label."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 43,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeSharedData.label",
								"id": 310
							}
						},
						{
							"id": 323,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc zoom state, Only one arc may be selected at a time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.selected",
								"id": 306
							}
						},
						{
							"id": 318,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Sunburst node size."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 53,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 321,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the sunburst's tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.tooltip",
								"id": 304
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								322,
								320,
								319,
								323,
								318,
								321
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 49,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSunburstNodeSharedData",
							"id": 309
						}
					]
				},
				{
					"id": 302,
					"name": "ChartSunburstNodeConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst node config interface."
					},
					"indexSignature": [
						{
							"id": 307,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sunburst node for reference."
							},
							"parameters": [
								{
									"id": 308,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 305,
							"name": "breadcrumb",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc breadcrumb content, if set, this will override the sunburst's breadcrumb accessor.\nUse null to disable the breadcrumb for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						},
						{
							"id": 303,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the sunburst's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 306,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc zoom state, Only one arc may be selected at a time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							}
						},
						{
							"id": 304,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the sunburst's tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								305,
								303,
								306,
								304
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 6,
							"character": 40
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSunburstNodeSharedData",
							"id": 309
						}
					]
				},
				{
					"id": 309,
					"name": "ChartSunburstNodeSharedData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst node data interface (extends all config properties)."
					},
					"indexSignature": [
						{
							"id": 315,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sunburst node for reference."
							},
							"parameters": [
								{
									"id": 316,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 313,
							"name": "breadcrumb",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc breadcrumb content, if set, this will override the sunburst's breadcrumb accessor.\nUse null to disable the breadcrumb for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.breadcrumb",
								"id": 305
							}
						},
						{
							"id": 311,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the sunburst's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.color",
								"id": 303
							}
						},
						{
							"id": 310,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Sunburst node label."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 43,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 314,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc zoom state, Only one arc may be selected at a time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.selected",
								"id": 306
							}
						},
						{
							"id": 312,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the sunburst's tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.tooltip",
								"id": 304
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								313,
								311,
								310,
								314,
								312
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 39,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSunburstNodeConfig",
							"id": 302
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ChartSunburstLeafNodeData",
							"id": 317
						},
						{
							"type": "reference",
							"name": "ChartSunburstParentNodeData",
							"id": 326
						}
					]
				},
				{
					"id": 326,
					"name": "ChartSunburstParentNodeData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sunburst parent-node data interface (extends all node data)."
					},
					"indexSignature": [
						{
							"id": 334,
							"name": "__index",
							"kind": 8192,
							"kindString": "Index signature",
							"flags": {},
							"comment": {
								"shortText": "Additional attributes can be added to the sunburst node for reference."
							},
							"parameters": [
								{
									"id": 335,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"children": [
						{
							"id": 332,
							"name": "breadcrumb",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc breadcrumb content, if set, this will override the sunburst's breadcrumb accessor.\nUse null to disable the breadcrumb for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.breadcrumb",
								"id": 305
							}
						},
						{
							"id": 327,
							"name": "children",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Sunburst node children."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 63,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ChartSunburstParentNodeData",
												"id": 326
											},
											{
												"type": "reference",
												"name": "ChartSunburstLeafNodeData",
												"id": 317
											}
										]
									}
								]
							}
						},
						{
							"id": 330,
							"name": "color",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc color, if set, this will override the sunburst's arc color accessor."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 10,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.color",
								"id": 303
							}
						},
						{
							"id": 329,
							"name": "label",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"comment": {
								"shortText": "Sunburst node label."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 43,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeSharedData.label",
								"id": 310
							}
						},
						{
							"id": 333,
							"name": "selected",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Initial arc zoom state, Only one arc may be selected at a time.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 28,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "false"
									},
									{
										"type": "intrinsic",
										"name": "true"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.selected",
								"id": 306
							}
						},
						{
							"id": 328,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Sunburst node size. If a parent has a node size, it will override the automatic leaf\nnode size aggrigate function. This is useful to oversize a parent node to indicate it\nis not completely resolved by it's children."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 70,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 331,
							"name": "tooltip",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Arc tooltip content, if set, this will override the sunburst's tooltip accessor.\nUse null to disable the tooltip for this arc."
							},
							"sources": [
								{
									"fileName": "ChartSunburst.ts",
									"line": 16,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ChartSunburstNodeConfig.tooltip",
								"id": 304
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								332,
								327,
								330,
								329,
								333,
								328,
								331
							]
						}
					],
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 59,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ChartSunburstNodeSharedData",
							"id": 309
						}
					]
				},
				{
					"id": 466,
					"name": "ChartSunburstNodeData",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "ChartSunburst.ts",
							"line": 73,
							"character": 33
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ChartSunburstParentNodeData",
								"id": 326
							},
							{
								"type": "reference",
								"name": "ChartSunburstLeafNodeData",
								"id": 317
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						336,
						401,
						317,
						302,
						309,
						326
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						466
					]
				}
			],
			"sources": [
				{
					"fileName": "ChartSunburst.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"General\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true,
				"isExternal": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/General.ts",
			"children": [
				{
					"id": 2,
					"name": "Padding",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"children": [
						{
							"id": 6,
							"name": "bottom",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "General.ts",
									"line": 5,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4,
							"name": "left",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "General.ts",
									"line": 3,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "right",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "General.ts",
									"line": 4,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3,
							"name": "top",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "General.ts",
									"line": 2,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								6,
								4,
								5,
								3
							]
						}
					],
					"sources": [
						{
							"fileName": "General.ts",
							"line": 1,
							"character": 24
						}
					]
				},
				{
					"id": 7,
					"name": "Orient",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "General.ts",
							"line": 8,
							"character": 18
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "top"
							},
							{
								"type": "stringLiteral",
								"value": "left"
							},
							{
								"type": "stringLiteral",
								"value": "right"
							},
							{
								"type": "stringLiteral",
								"value": "bottom"
							}
						]
					}
				},
				{
					"id": 8,
					"name": "OrientCorner",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "General.ts",
							"line": 10,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "top left"
							},
							{
								"type": "stringLiteral",
								"value": "top center"
							},
							{
								"type": "stringLiteral",
								"value": "top right"
							},
							{
								"type": "stringLiteral",
								"value": "center left"
							},
							{
								"type": "stringLiteral",
								"value": "center center"
							},
							{
								"type": "stringLiteral",
								"value": "center right"
							},
							{
								"type": "stringLiteral",
								"value": "bottom center"
							},
							{
								"type": "stringLiteral",
								"value": "bottom right"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						7,
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "General.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1099,
			"name": "\"index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/kevinwarne/Documents/My_Repos/d2b/src/types/index.ts",
			"sources": [
				{
					"fileName": "index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				933,
				592,
				791,
				899,
				467,
				9,
				146,
				301,
				1,
				1099
			]
		}
	]
}